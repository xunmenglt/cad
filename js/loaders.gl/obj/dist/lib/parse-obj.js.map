{"version":3,"sources":["../../src/lib/parse-obj.ts"],"names":["OBJECT_RE","MATERIAL_RE","MATERIAL_USE_RE","MeshMaterial","constructor","index","name","mtllib","smooth","groupStart","groupEnd","groupCount","inherited","clone","MeshObject","geometry","vertices","normals","colors","uvs","materials","fromDeclaration","startMaterial","libraries","previous","_finalize","splice","material","length","Array","isArray","undefined","push","currentMaterial","end","lastMultiMaterial","mi","ParserState","objects","object","materialLibraries","startObject","previousMaterial","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addColor","addUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","uvLen","nLen","addPointGeometry","type","vertex","addLineGeometry","uv","text","state","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","l","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","toLowerCase","Error","meshes","mesh","header","vertexCount","attributes","mode","POSITION","Float32Array","size","NORMAL","COLOR_0","TEXCOORD_0","sourceMaterial","_material","flatShading"],"mappings":"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","sourcesContent":["// OBJ Loader, adapted from THREE.js (MIT license)\r\n//\r\n// Attributions per original THREE.js source file:\r\n//\r\n// @author mrdoob / http://mrdoob.com/\r\n\r\n// @ts-nocheck\r\n\r\n// o object_name | g group_name\r\nconst OBJECT_RE = /^[og]\\s*(.+)?/;\r\n// mtllib file_reference\r\nconst MATERIAL_RE = /^mtllib /;\r\n// usemtl material_name\r\nconst MATERIAL_USE_RE = /^usemtl /;\r\n\r\nclass MeshMaterial {\r\n  constructor({index, name = '', mtllib, smooth, groupStart}) {\r\n    this.index = index;\r\n    this.name = name;\r\n    this.mtllib = mtllib;\r\n    this.smooth = smooth;\r\n    this.groupStart = groupStart;\r\n    this.groupEnd = -1;\r\n    this.groupCount = -1;\r\n    this.inherited = false;\r\n  }\r\n\r\n  clone(index = this.index) {\r\n    return new MeshMaterial({\r\n      index,\r\n      name: this.name,\r\n      mtllib: this.mtllib,\r\n      smooth: this.smooth,\r\n      groupStart: 0\r\n    });\r\n  }\r\n}\r\n\r\nclass MeshObject {\r\n  constructor(name = '') {\r\n    this.name = name;\r\n\r\n    this.geometry = {\r\n      vertices: [],\r\n      normals: [],\r\n      colors: [],\r\n      uvs: []\r\n    };\r\n\r\n    this.materials = [];\r\n    this.smooth = true;\r\n\r\n    this.fromDeclaration = null;\r\n  }\r\n\r\n  startMaterial(name, libraries) {\r\n    const previous = this._finalize(false);\r\n\r\n    // New usemtl declaration overwrites an inherited material, except if faces were declared\r\n    // after the material, then it must be preserved for proper MultiMaterial continuation.\r\n    if (previous && (previous.inherited || previous.groupCount <= 0)) {\r\n      this.materials.splice(previous.index, 1);\r\n    }\r\n\r\n    const material = new MeshMaterial({\r\n      index: this.materials.length,\r\n      name,\r\n      mtllib:\r\n        Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\r\n      smooth: previous !== undefined ? previous.smooth : this.smooth,\r\n      groupStart: previous !== undefined ? previous.groupEnd : 0\r\n    });\r\n\r\n    this.materials.push(material);\r\n\r\n    return material;\r\n  }\r\n\r\n  currentMaterial() {\r\n    if (this.materials.length > 0) {\r\n      return this.materials[this.materials.length - 1];\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  _finalize(end) {\r\n    const lastMultiMaterial = this.currentMaterial();\r\n    if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\r\n      lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\r\n      lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\r\n      lastMultiMaterial.inherited = false;\r\n    }\r\n\r\n    // Ignore objects tail materials if no face declarations followed them before a new o/g started.\r\n    if (end && this.materials.length > 1) {\r\n      for (let mi = this.materials.length - 1; mi >= 0; mi--) {\r\n        if (this.materials[mi].groupCount <= 0) {\r\n          this.materials.splice(mi, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Guarantee at least one empty material, this makes the creation later more straight forward.\r\n    if (end && this.materials.length === 0) {\r\n      this.materials.push({\r\n        name: '',\r\n        smooth: this.smooth\r\n      });\r\n    }\r\n\r\n    return lastMultiMaterial;\r\n  }\r\n}\r\n\r\nclass ParserState {\r\n  constructor() {\r\n    this.objects = [];\r\n    this.object = null;\r\n\r\n    this.vertices = [];\r\n    this.normals = [];\r\n    this.colors = [];\r\n    this.uvs = [];\r\n\r\n    this.materialLibraries = [];\r\n\r\n    this.startObject('', false);\r\n  }\r\n\r\n  startObject(name, fromDeclaration = true) {\r\n    // If the current object (initial from reset) is not from a g/o declaration in the parsed\r\n    // file. We need to use it for the first parsed g/o to keep things in sync.\r\n    if (this.object && !this.object.fromDeclaration) {\r\n      this.object.name = name;\r\n      this.object.fromDeclaration = fromDeclaration;\r\n      return;\r\n    }\r\n\r\n    const previousMaterial =\r\n      this.object && typeof this.object.currentMaterial === 'function'\r\n        ? this.object.currentMaterial()\r\n        : undefined;\r\n\r\n    if (this.object && typeof this.object._finalize === 'function') {\r\n      this.object._finalize(true);\r\n    }\r\n\r\n    this.object = new MeshObject(name);\r\n    this.object.fromDeclaration = fromDeclaration;\r\n\r\n    // Inherit previous objects material.\r\n    // Spec tells us that a declared material must be set to all objects until a new material is declared.\r\n    // If a usemtl declaration is encountered while this new object is being parsed, it will\r\n    // overwrite the inherited material. Exception being that there was already face declarations\r\n    // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\r\n    if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\r\n      const declared = previousMaterial.clone(0);\r\n      declared.inherited = true;\r\n      this.object.materials.push(declared);\r\n    }\r\n\r\n    this.objects.push(this.object);\r\n  }\r\n\r\n  finalize() {\r\n    if (this.object && typeof this.object._finalize === 'function') {\r\n      this.object._finalize(true);\r\n    }\r\n  }\r\n\r\n  parseVertexIndex(value, len) {\r\n    const index = parseInt(value);\r\n    return (index >= 0 ? index - 1 : index + len / 3) * 3;\r\n  }\r\n\r\n  parseNormalIndex(value, len) {\r\n    const index = parseInt(value);\r\n    return (index >= 0 ? index - 1 : index + len / 3) * 3;\r\n  }\r\n\r\n  parseUVIndex(value, len) {\r\n    const index = parseInt(value);\r\n    return (index >= 0 ? index - 1 : index + len / 2) * 2;\r\n  }\r\n\r\n  addVertex(a, b, c) {\r\n    const src = this.vertices;\r\n    const dst = this.object.geometry.vertices;\r\n\r\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\r\n    dst.push(src[b + 0], src[b + 1], src[b + 2]);\r\n    dst.push(src[c + 0], src[c + 1], src[c + 2]);\r\n  }\r\n\r\n  addVertexPoint(a) {\r\n    const src = this.vertices;\r\n    const dst = this.object.geometry.vertices;\r\n\r\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\r\n  }\r\n\r\n  addVertexLine(a) {\r\n    const src = this.vertices;\r\n    const dst = this.object.geometry.vertices;\r\n\r\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\r\n  }\r\n\r\n  addNormal(a, b, c) {\r\n    const src = this.normals;\r\n    const dst = this.object.geometry.normals;\r\n\r\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\r\n    dst.push(src[b + 0], src[b + 1], src[b + 2]);\r\n    dst.push(src[c + 0], src[c + 1], src[c + 2]);\r\n  }\r\n\r\n  addColor(a, b, c) {\r\n    const src = this.colors;\r\n    const dst = this.object.geometry.colors;\r\n\r\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\r\n    dst.push(src[b + 0], src[b + 1], src[b + 2]);\r\n    dst.push(src[c + 0], src[c + 1], src[c + 2]);\r\n  }\r\n\r\n  addUV(a, b, c) {\r\n    const src = this.uvs;\r\n    const dst = this.object.geometry.uvs;\r\n\r\n    dst.push(src[a + 0], src[a + 1]);\r\n    dst.push(src[b + 0], src[b + 1]);\r\n    dst.push(src[c + 0], src[c + 1]);\r\n  }\r\n\r\n  addUVLine(a) {\r\n    const src = this.uvs;\r\n    const dst = this.object.geometry.uvs;\r\n\r\n    dst.push(src[a + 0], src[a + 1]);\r\n  }\r\n\r\n  // eslint-disable-next-line max-params\r\n  addFace(a, b, c, ua, ub, uc, na, nb, nc) {\r\n    const vLen = this.vertices.length;\r\n\r\n    let ia = this.parseVertexIndex(a, vLen);\r\n    let ib = this.parseVertexIndex(b, vLen);\r\n    let ic = this.parseVertexIndex(c, vLen);\r\n\r\n    this.addVertex(ia, ib, ic);\r\n\r\n    if (ua !== undefined && ua !== '') {\r\n      const uvLen = this.uvs.length;\r\n      ia = this.parseUVIndex(ua, uvLen);\r\n      ib = this.parseUVIndex(ub, uvLen);\r\n      ic = this.parseUVIndex(uc, uvLen);\r\n      this.addUV(ia, ib, ic);\r\n    }\r\n\r\n    if (na !== undefined && na !== '') {\r\n      // Normals are many times the same. If so, skip function call and parseInt.\r\n      const nLen = this.normals.length;\r\n      ia = this.parseNormalIndex(na, nLen);\r\n\r\n      ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\r\n      ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\r\n\r\n      this.addNormal(ia, ib, ic);\r\n    }\r\n\r\n    if (this.colors.length > 0) {\r\n      this.addColor(ia, ib, ic);\r\n    }\r\n  }\r\n\r\n  addPointGeometry(vertices) {\r\n    this.object.geometry.type = 'Points';\r\n\r\n    const vLen = this.vertices.length;\r\n\r\n    for (const vertex of vertices) {\r\n      this.addVertexPoint(this.parseVertexIndex(vertex, vLen));\r\n    }\r\n  }\r\n\r\n  addLineGeometry(vertices, uvs) {\r\n    this.object.geometry.type = 'Line';\r\n\r\n    const vLen = this.vertices.length;\r\n    const uvLen = this.uvs.length;\r\n\r\n    for (const vertex of vertices) {\r\n      this.addVertexLine(this.parseVertexIndex(vertex, vLen));\r\n    }\r\n\r\n    for (const uv of uvs) {\r\n      this.addUVLine(this.parseUVIndex(uv, uvLen));\r\n    }\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line max-statements, complexity\r\nexport default (text) => {\r\n  const state = new ParserState();\r\n\r\n  if (text.indexOf('\\r\\n') !== -1) {\r\n    // This is faster than String.split with regex that splits on both\r\n    text = text.replace(/\\r\\n/g, '\\n');\r\n  }\r\n\r\n  if (text.indexOf('\\\\\\n') !== -1) {\r\n    // join lines separated by a line continuation character (\\)\r\n    text = text.replace(/\\\\\\n/g, '');\r\n  }\r\n\r\n  const lines = text.split('\\n');\r\n  let line = '';\r\n  let lineFirstChar = '';\r\n  let lineLength = 0;\r\n  let result = [];\r\n\r\n  // Faster to just trim left side of the line. Use if available.\r\n  const trimLeft = typeof ''.trimLeft === 'function';\r\n\r\n  /* eslint-disable no-continue, max-depth */\r\n  for (let i = 0, l = lines.length; i < l; i++) {\r\n    line = lines[i];\r\n    line = trimLeft ? line.trimLeft() : line.trim();\r\n    lineLength = line.length;\r\n\r\n    if (lineLength === 0) continue;\r\n\r\n    lineFirstChar = line.charAt(0);\r\n\r\n    // @todo invoke passed in handler if any\r\n    if (lineFirstChar === '#') continue;\r\n\r\n    if (lineFirstChar === 'v') {\r\n      const data = line.split(/\\s+/);\r\n\r\n      switch (data[0]) {\r\n        case 'v':\r\n          state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\r\n          if (data.length === 8) {\r\n            state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\r\n          }\r\n          break;\r\n        case 'vn':\r\n          state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\r\n          break;\r\n        case 'vt':\r\n          state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\r\n          break;\r\n        default:\r\n      }\r\n    } else if (lineFirstChar === 'f') {\r\n      const lineData = line.substr(1).trim();\r\n      const vertexData = lineData.split(/\\s+/);\r\n      const faceVertices = [];\r\n\r\n      // Parse the face vertex data into an easy to work with format\r\n\r\n      for (let j = 0, jl = vertexData.length; j < jl; j++) {\r\n        const vertex = vertexData[j];\r\n\r\n        if (vertex.length > 0) {\r\n          const vertexParts = vertex.split('/');\r\n          faceVertices.push(vertexParts);\r\n        }\r\n      }\r\n\r\n      // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\r\n\r\n      const v1 = faceVertices[0];\r\n\r\n      for (let j = 1, jl = faceVertices.length - 1; j < jl; j++) {\r\n        const v2 = faceVertices[j];\r\n        const v3 = faceVertices[j + 1];\r\n\r\n        state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\r\n      }\r\n    } else if (lineFirstChar === 'l') {\r\n      const lineParts = line.substring(1).trim().split(' ');\r\n      let lineVertices;\r\n      const lineUVs = [];\r\n\r\n      if (line.indexOf('/') === -1) {\r\n        lineVertices = lineParts;\r\n      } else {\r\n        lineVertices = [];\r\n        for (let li = 0, llen = lineParts.length; li < llen; li++) {\r\n          const parts = lineParts[li].split('/');\r\n\r\n          if (parts[0] !== '') lineVertices.push(parts[0]);\r\n          if (parts[1] !== '') lineUVs.push(parts[1]);\r\n        }\r\n      }\r\n      state.addLineGeometry(lineVertices, lineUVs);\r\n    } else if (lineFirstChar === 'p') {\r\n      const lineData = line.substr(1).trim();\r\n      const pointData = lineData.split(' ');\r\n\r\n      state.addPointGeometry(pointData);\r\n    } else if ((result = OBJECT_RE.exec(line)) !== null) {\r\n      // o object_name\r\n      // or\r\n      // g group_name\r\n\r\n      // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\r\n      // var name = result[ 0 ].substr( 1 ).trim();\r\n      const name = (' ' + result[0].substr(1).trim()).substr(1); // eslint-disable-line\r\n\r\n      state.startObject(name);\r\n    } else if (MATERIAL_USE_RE.test(line)) {\r\n      // material\r\n\r\n      state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\r\n    } else if (MATERIAL_RE.test(line)) {\r\n      // mtl file\r\n\r\n      state.materialLibraries.push(line.substring(7).trim());\r\n    } else if (lineFirstChar === 's') {\r\n      result = line.split(' ');\r\n\r\n      // smooth shading\r\n\r\n      // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\r\n      // but does not define a usemtl for each face set.\r\n      // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\r\n      // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\r\n      // where explicit usemtl defines geometry groups.\r\n      // Example asset: examples/models/obj/cerberus/Cerberus.obj\r\n\r\n      /*\r\n       * http://paulbourke.net/dataformats/obj/\r\n       * or\r\n       * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\r\n       *\r\n       * From chapter \"Grouping\" Syntax explanation \"s group_number\":\r\n       * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\r\n       * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\r\n       * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\r\n       * than 0.\"\r\n       */\r\n      if (result.length > 1) {\r\n        const value = result[1].trim().toLowerCase();\r\n        state.object.smooth = value !== '0' && value !== 'off';\r\n      } else {\r\n        // ZBrush can produce \"s\" lines #11707\r\n        state.object.smooth = true;\r\n      }\r\n      const material = state.object.currentMaterial();\r\n      if (material) material.smooth = state.object.smooth;\r\n    } else {\r\n      // Handle null terminated files without exception\r\n      if (line === '\\0') continue;\r\n\r\n      throw new Error(`Unexpected line: \"${line}\"`);\r\n    }\r\n  }\r\n\r\n  state.finalize();\r\n\r\n  const meshes = [];\r\n  const materials = [];\r\n\r\n  for (const object of state.objects) {\r\n    const {geometry} = object;\r\n\r\n    // Skip o/g line declarations that did not follow with any faces\r\n    if (geometry.vertices.length === 0) continue;\r\n\r\n    const mesh = {\r\n      header: {\r\n        vertexCount: geometry.vertices.length / 3\r\n      },\r\n      attributes: {}\r\n    };\r\n\r\n    switch (geometry.type) {\r\n      case 'Points':\r\n        mesh.mode = 0; // GL.POINTS\r\n        break;\r\n      case 'Line':\r\n        mesh.mode = 1; // GL.LINES\r\n        break;\r\n      default:\r\n        mesh.mode = 4; // GL.TRIANGLES\r\n        break;\r\n    }\r\n\r\n    mesh.attributes.POSITION = {value: new Float32Array(geometry.vertices), size: 3};\r\n\r\n    if (geometry.normals.length > 0) {\r\n      mesh.attributes.NORMAL = {value: new Float32Array(geometry.normals), size: 3};\r\n    }\r\n\r\n    if (geometry.colors.length > 0) {\r\n      mesh.attributes.COLOR_0 = {value: new Float32Array(geometry.colors), size: 3};\r\n    }\r\n\r\n    if (geometry.uvs.length > 0) {\r\n      mesh.attributes.TEXCOORD_0 = {value: new Float32Array(geometry.uvs), size: 2};\r\n    }\r\n\r\n    // Create materials\r\n    mesh.materials = [];\r\n    for (const sourceMaterial of object.materials) {\r\n      // TODO - support full spec\r\n      const _material = {\r\n        name: sourceMaterial.name,\r\n        flatShading: !sourceMaterial.smooth\r\n      };\r\n      mesh.materials.push(_material);\r\n      materials.push(_material);\r\n    }\r\n\r\n    mesh.name = object.name;\r\n    meshes.push(mesh);\r\n  }\r\n\r\n  return {meshes, materials};\r\n};\r\n"],"file":"parse-obj.js"}