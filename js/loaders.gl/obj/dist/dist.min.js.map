{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/bundle.ts","webpack:///(webpack)/buildin/global.js","webpack:///../schema/src/category/mesh/mesh-utils.ts","webpack:///./src/lib/parse-obj.ts","webpack:///../schema/src/lib/schema/impl/schema.ts","webpack:///../schema/src/lib/utils/assert.ts","webpack:///../schema/src/lib/schema/impl/enum.ts","webpack:///../schema/src/lib/schema/impl/type.ts","webpack:///../schema/src/lib/schema/impl/field.ts","webpack:///./src/lib/get-obj-schema.ts","webpack:///../schema/src/lib/arrow/arrow-type-utils.ts","webpack:///./src/lib/load-obj.ts","webpack:///./src/obj-loader.ts","webpack:///./src/index.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","moduleExports","require","_global","global","loaders","assign","g","this","Function","e","getMeshBoundingBox","attributes","minX","Infinity","minY","minZ","maxX","maxY","maxZ","positions","POSITION","len","length","x","y","z","OBJECT_RE","MATERIAL_RE","MATERIAL_USE_RE","MeshMaterial","constructor","index","mtllib","smooth","groupStart","groupEnd","groupCount","inherited","clone","MeshObject","geometry","vertices","normals","colors","uvs","materials","fromDeclaration","startMaterial","libraries","previous","_finalize","splice","material","Array","isArray","undefined","push","currentMaterial","end","lastMultiMaterial","mi","ParserState","objects","materialLibraries","startObject","previousMaterial","declared","finalize","parseVertexIndex","parseInt","parseNormalIndex","parseUVIndex","addVertex","b","src","dst","addVertexPoint","addVertexLine","addNormal","addColor","addUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","uvLen","nLen","addPointGeometry","type","vertex","addLineGeometry","uv","Schema","fields","metadata","condition","message","Error","assert","usedNames","field","console","warn","checkNames","Map","compareTo","other","select","columnNames","nameMap","selectedFields","filter","selectAt","columnIndices","map","Boolean","schemaOrFields","otherSchema","mergeMaps","fieldMap","mergedFields","values","m1","m2","Type","DataType","typeId","Null","Int","Float","Binary","Utf8","Bool","Decimal","Date","Time","Timestamp","Interval","List","Struct","Union","FixedSizeBinary","FixedSizeList","Dictionary","NONE","isSigned","bitWidth","super","toString","Int8","Int16","Int32","Uint8","Uint16","Uint32","Precision","precision","Float32","Float64","listSize","child","children","valueType","Field","nullable","getArrowFieldFromAttribute","attributeName","attribute","metadataMap","set","JSON","stringify","array","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","getArrowTypeFromTypedArray","isSingleValue","size","loadOBJ","text","options","meshes","state","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","trim","charAt","data","parseFloat","vertexData","substr","faceVertices","j","jl","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","toLowerCase","mesh","header","vertexCount","NORMAL","COLOR_0","TEXCOORD_0","sourceMaterial","_material","flatShading","parseOBJ","reduce","mergeAttributes","boundingBox","loaderData","schema","getOBJSchema","OBJLoader","id","version","worker","extensions","mimeTypes","testText","obj","OBJWorkerLoader","parse","async","arrayBuffer","TextDecoder","decode","parseTextSync","_typecheckOBJLoader"],"mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUT,QAGnC,IAAIC,EAASM,EAAiBE,GAAY,CACzCJ,EAAGI,EACHC,GAAG,EACHV,QAAS,IAUV,OANAW,EAAQF,GAAUG,KAAKX,EAAOD,QAASC,EAAQA,EAAOD,QAASQ,GAG/DP,EAAOS,GAAI,EAGJT,EAAOD,QA0Df,OArDAQ,EAAoBK,EAAIF,EAGxBH,EAAoBM,EAAIP,EAGxBC,EAAoBO,EAAI,SAASf,EAASgB,EAAMC,GAC3CT,EAAoBU,EAAElB,EAASgB,IAClCG,OAAOC,eAAepB,EAASgB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhET,EAAoBe,EAAI,SAASvB,GACX,oBAAXwB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAepB,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAepB,EAAS,aAAc,CAAE0B,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBO,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAASjC,GAChC,IAAIgB,EAAShB,GAAUA,EAAO4B,WAC7B,WAAwB,OAAO5B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAO,EAAoBO,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRT,EAAoBU,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG5B,EAAoB+B,EAAI,GAIjB/B,EAAoBA,EAAoBgC,EAAI,G,mBClFrD,YACA,MAAMC,EAAgBC,EAAQ,GACxBC,EAA4B,oBAAXrC,OAAyBsC,EAAStC,OACzDqC,EAAQE,QAAUF,EAAQE,SAAW,GACrC5C,EAAOD,QAAUmB,OAAO2B,OAAOH,EAAQE,QAASJ,K,gCCJhD,IAAIM,EAGJA,EAAI,WACH,OAAOC,KADJ,GAIJ,IAECD,EAAIA,GAAK,IAAIE,SAAS,cAAb,GACR,MAAOC,GAEc,iBAAX5C,SAAqByC,EAAIzC,QAOrCL,EAAOD,QAAU+C,G,6BCgBV,SAASI,EAAmBC,GACjC,IAAIC,EAAOC,IACPC,EAAOD,IACPE,EAAOF,IACPG,GAAQH,IACRI,GAAQJ,IACRK,GAAQL,IAEZ,MAAMM,EAAYR,EAAWS,SAAWT,EAAWS,SAASnC,MAAQ,GAC9DoC,EAAMF,GAAaA,EAAUG,OAEnC,IAAK,IAAI1D,EAAI,EAAGA,EAAIyD,EAAKzD,GAAK,EAAG,CAC/B,MAAM2D,EAAIJ,EAAUvD,GACd4D,EAAIL,EAAUvD,EAAI,GAClB6D,EAAIN,EAAUvD,EAAI,GAExBgD,EAAOW,EAAIX,EAAOW,EAAIX,EACtBE,EAAOU,EAAIV,EAAOU,EAAIV,EACtBC,EAAOU,EAAIV,EAAOU,EAAIV,EAEtBC,EAAOO,EAAIP,EAAOO,EAAIP,EACtBC,EAAOO,EAAIP,EAAOO,EAAIP,EACtBC,EAAOO,EAAIP,EAAOO,EAAIP,EAExB,MAAO,CACL,CAACN,EAAME,EAAMC,GACb,CAACC,EAAMC,EAAMC,I,qJCpDjB,MAAMQ,EAAY,gBAEZC,EAAc,WAEdC,EAAkB,WAExB,MAAMC,EACJC,aAAY,MAACC,EAAD,KAAQxD,EAAO,GAAf,OAAmByD,EAAnB,OAA2BC,EAA3B,WAAmCC,IAC7C3B,KAAKwB,MAAQA,EACbxB,KAAKhC,KAAOA,EACZgC,KAAKyB,OAASA,EACdzB,KAAK0B,OAASA,EACd1B,KAAK2B,WAAaA,EAClB3B,KAAK4B,UAAY,EACjB5B,KAAK6B,YAAc,EACnB7B,KAAK8B,WAAY,EAGnBC,MAAMP,EAAQxB,KAAKwB,OACjB,OAAO,IAAIF,EAAa,CACtBE,QACAxD,KAAMgC,KAAKhC,KACXyD,OAAQzB,KAAKyB,OACbC,OAAQ1B,KAAK0B,OACbC,WAAY,KAKlB,MAAMK,EACJT,YAAYvD,EAAO,IACjBgC,KAAKhC,KAAOA,EAEZgC,KAAKiC,SAAW,CACdC,SAAU,GACVC,QAAS,GACTC,OAAQ,GACRC,IAAK,IAGPrC,KAAKsC,UAAY,GACjBtC,KAAK0B,QAAS,EAEd1B,KAAKuC,gBAAkB,KAGzBC,cAAcxE,EAAMyE,GAClB,MAAMC,EAAW1C,KAAK2C,WAAU,GAI5BD,IAAaA,EAASZ,WAAaY,EAASb,YAAc,IAC5D7B,KAAKsC,UAAUM,OAAOF,EAASlB,MAAO,GAGxC,MAAMqB,EAAW,IAAIvB,EAAa,CAChCE,MAAOxB,KAAKsC,UAAUvB,OACtB/C,OACAyD,OACEqB,MAAMC,QAAQN,IAAcA,EAAU1B,OAAS,EAAI0B,EAAUA,EAAU1B,OAAS,GAAK,GACvFW,YAAqBsB,IAAbN,EAAyBA,EAAShB,OAAS1B,KAAK0B,OACxDC,gBAAyBqB,IAAbN,EAAyBA,EAASd,SAAW,IAK3D,OAFA5B,KAAKsC,UAAUW,KAAKJ,GAEbA,EAGTK,kBACE,GAAIlD,KAAKsC,UAAUvB,OAAS,EAC1B,OAAOf,KAAKsC,UAAUtC,KAAKsC,UAAUvB,OAAS,GAMlD4B,UAAUQ,GACR,MAAMC,EAAoBpD,KAAKkD,kBAQ/B,GAPIE,IAAqD,IAAhCA,EAAkBxB,WACzCwB,EAAkBxB,SAAW5B,KAAKiC,SAASC,SAASnB,OAAS,EAC7DqC,EAAkBvB,WAAauB,EAAkBxB,SAAWwB,EAAkBzB,WAC9EyB,EAAkBtB,WAAY,GAI5BqB,GAAOnD,KAAKsC,UAAUvB,OAAS,EACjC,IAAK,IAAIsC,EAAKrD,KAAKsC,UAAUvB,OAAS,EAAGsC,GAAM,EAAGA,IAC5CrD,KAAKsC,UAAUe,GAAIxB,YAAc,GACnC7B,KAAKsC,UAAUM,OAAOS,EAAI,GAahC,OAPIF,GAAiC,IAA1BnD,KAAKsC,UAAUvB,QACxBf,KAAKsC,UAAUW,KAAK,CAClBjF,KAAM,GACN0D,OAAQ1B,KAAK0B,SAIV0B,GAIX,MAAME,EACJ/B,cACEvB,KAAKuD,QAAU,GACfvD,KAAKb,OAAS,KAEda,KAAKkC,SAAW,GAChBlC,KAAKmC,QAAU,GACfnC,KAAKoC,OAAS,GACdpC,KAAKqC,IAAM,GAEXrC,KAAKwD,kBAAoB,GAEzBxD,KAAKyD,YAAY,IAAI,GAGvBA,YAAYzF,EAAMuE,GAAkB,GAGlC,GAAIvC,KAAKb,SAAWa,KAAKb,OAAOoD,gBAG9B,OAFAvC,KAAKb,OAAOnB,KAAOA,OACnBgC,KAAKb,OAAOoD,gBAAkBA,GAIhC,MAAMmB,EACJ1D,KAAKb,QAAiD,mBAAhCa,KAAKb,OAAO+D,gBAC9BlD,KAAKb,OAAO+D,uBACZF,EAcN,GAZIhD,KAAKb,QAA2C,mBAA1Ba,KAAKb,OAAOwD,WACpC3C,KAAKb,OAAOwD,WAAU,GAGxB3C,KAAKb,OAAS,IAAI6C,EAAWhE,GAC7BgC,KAAKb,OAAOoD,gBAAkBA,EAO1BmB,GAAoBA,EAAiB1F,MAA0C,mBAA3B0F,EAAiB3B,MAAsB,CAC7F,MAAM4B,EAAWD,EAAiB3B,MAAM,GACxC4B,EAAS7B,WAAY,EACrB9B,KAAKb,OAAOmD,UAAUW,KAAKU,GAG7B3D,KAAKuD,QAAQN,KAAKjD,KAAKb,QAGzByE,WACM5D,KAAKb,QAA2C,mBAA1Ba,KAAKb,OAAOwD,WACpC3C,KAAKb,OAAOwD,WAAU,GAI1BkB,iBAAiBnF,EAAOoC,GACtB,MAAMU,EAAQsC,SAASpF,GACvB,OAAoD,GAA5C8C,GAAS,EAAIA,EAAQ,EAAIA,EAAQV,EAAM,GAGjDiD,iBAAiBrF,EAAOoC,GACtB,MAAMU,EAAQsC,SAASpF,GACvB,OAAoD,GAA5C8C,GAAS,EAAIA,EAAQ,EAAIA,EAAQV,EAAM,GAGjDkD,aAAatF,EAAOoC,GAClB,MAAMU,EAAQsC,SAASpF,GACvB,OAAoD,GAA5C8C,GAAS,EAAIA,EAAQ,EAAIA,EAAQV,EAAM,GAGjDmD,UAAU7G,EAAG8G,EAAGpG,GACd,MAAMqG,EAAMnE,KAAKkC,SACXkC,EAAMpE,KAAKb,OAAO8C,SAASC,SAEjCkC,EAAInB,KAAKkB,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,IACzCgH,EAAInB,KAAKkB,EAAID,EAAI,GAAIC,EAAID,EAAI,GAAIC,EAAID,EAAI,IACzCE,EAAInB,KAAKkB,EAAIrG,EAAI,GAAIqG,EAAIrG,EAAI,GAAIqG,EAAIrG,EAAI,IAG3CuG,eAAejH,GACb,MAAM+G,EAAMnE,KAAKkC,SACLlC,KAAKb,OAAO8C,SAASC,SAE7Be,KAAKkB,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,IAG3CkH,cAAclH,GACZ,MAAM+G,EAAMnE,KAAKkC,SACLlC,KAAKb,OAAO8C,SAASC,SAE7Be,KAAKkB,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,IAG3CmH,UAAUnH,EAAG8G,EAAGpG,GACd,MAAMqG,EAAMnE,KAAKmC,QACXiC,EAAMpE,KAAKb,OAAO8C,SAASE,QAEjCiC,EAAInB,KAAKkB,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,IACzCgH,EAAInB,KAAKkB,EAAID,EAAI,GAAIC,EAAID,EAAI,GAAIC,EAAID,EAAI,IACzCE,EAAInB,KAAKkB,EAAIrG,EAAI,GAAIqG,EAAIrG,EAAI,GAAIqG,EAAIrG,EAAI,IAG3C0G,SAASpH,EAAG8G,EAAGpG,GACb,MAAMqG,EAAMnE,KAAKoC,OACXgC,EAAMpE,KAAKb,OAAO8C,SAASG,OAEjCgC,EAAInB,KAAKkB,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,IACzCgH,EAAInB,KAAKkB,EAAID,EAAI,GAAIC,EAAID,EAAI,GAAIC,EAAID,EAAI,IACzCE,EAAInB,KAAKkB,EAAIrG,EAAI,GAAIqG,EAAIrG,EAAI,GAAIqG,EAAIrG,EAAI,IAG3C2G,MAAMrH,EAAG8G,EAAGpG,GACV,MAAMqG,EAAMnE,KAAKqC,IACX+B,EAAMpE,KAAKb,OAAO8C,SAASI,IAEjC+B,EAAInB,KAAKkB,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,IAC7BgH,EAAInB,KAAKkB,EAAID,EAAI,GAAIC,EAAID,EAAI,IAC7BE,EAAInB,KAAKkB,EAAIrG,EAAI,GAAIqG,EAAIrG,EAAI,IAG/B4G,UAAUtH,GACR,MAAM+G,EAAMnE,KAAKqC,IACLrC,KAAKb,OAAO8C,SAASI,IAE7BY,KAAKkB,EAAI/G,EAAI,GAAI+G,EAAI/G,EAAI,IAI/BuH,QAAQvH,EAAG8G,EAAGpG,EAAG8G,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACnC,MAAMC,EAAOlF,KAAKkC,SAASnB,OAE3B,IAAIoE,EAAKnF,KAAK6D,iBAAiBzG,EAAG8H,GAC9BE,EAAKpF,KAAK6D,iBAAiBK,EAAGgB,GAC9BG,EAAKrF,KAAK6D,iBAAiB/F,EAAGoH,GAIlC,GAFAlF,KAAKiE,UAAUkB,EAAIC,EAAIC,QAEZrC,IAAP4B,GAA2B,KAAPA,EAAW,CACjC,MAAMU,EAAQtF,KAAKqC,IAAItB,OACvBoE,EAAKnF,KAAKgE,aAAaY,EAAIU,GAC3BF,EAAKpF,KAAKgE,aAAaa,EAAIS,GAC3BD,EAAKrF,KAAKgE,aAAac,EAAIQ,GAC3BtF,KAAKyE,MAAMU,EAAIC,EAAIC,GAGrB,QAAWrC,IAAP+B,GAA2B,KAAPA,EAAW,CAEjC,MAAMQ,EAAOvF,KAAKmC,QAAQpB,OAC1BoE,EAAKnF,KAAK+D,iBAAiBgB,EAAIQ,GAE/BH,EAAKL,IAAOC,EAAKG,EAAKnF,KAAK+D,iBAAiBiB,EAAIO,GAChDF,EAAKN,IAAOE,EAAKE,EAAKnF,KAAK+D,iBAAiBkB,EAAIM,GAEhDvF,KAAKuE,UAAUY,EAAIC,EAAIC,GAGrBrF,KAAKoC,OAAOrB,OAAS,GACvBf,KAAKwE,SAASW,EAAIC,EAAIC,GAI1BG,iBAAiBtD,GACflC,KAAKb,OAAO8C,SAASwD,KAAO,SAE5B,MAAMP,EAAOlF,KAAKkC,SAASnB,OAE3B,IAAK,MAAM2E,KAAUxD,EACnBlC,KAAKqE,eAAerE,KAAK6D,iBAAiB6B,EAAQR,IAItDS,gBAAgBzD,EAAUG,GACxBrC,KAAKb,OAAO8C,SAASwD,KAAO,OAE5B,MAAMP,EAAOlF,KAAKkC,SAASnB,OACrBuE,EAAQtF,KAAKqC,IAAItB,OAEvB,IAAK,MAAM2E,KAAUxD,EACnBlC,KAAKsE,cAActE,KAAK6D,iBAAiB6B,EAAQR,IAGnD,IAAK,MAAMU,KAAMvD,EACfrC,KAAK0E,UAAU1E,KAAKgE,aAAa4B,EAAIN,K,wHCjS5B,MAAMO,EAKnBtE,YAAYuE,EAAiBC,GAA2B,kDCXnD,SAAgBC,EAAoBC,GACzC,IAAKD,EACH,MAAM,IAAIE,MAAMD,GAAW,4BDU3BE,CAAOrD,MAAMC,QAAQ+C,IAqEzB,SAAoBA,GAClB,MAAMM,EAAY,GAClB,IAAK,MAAMC,KAASP,EACdM,EAAUC,EAAMrI,OAElBsI,QAAQC,KAAK,gCAAiCF,EAAMrI,KAAMqI,GAE5DD,EAAUC,EAAMrI,OAAQ,EA3ExBwI,CAAWV,GAEX9F,KAAK8F,OAASA,EACd9F,KAAK+F,SAAWA,GAAY,IAAIU,IAIlCC,UAAUC,GACR,GAAI3G,KAAK+F,WAAaY,EAAMZ,SAC1B,OAAO,EAET,GAAI/F,KAAK8F,OAAO/E,SAAW4F,EAAMb,OAAO/E,OACtC,OAAO,EAET,IAAK,IAAI1D,EAAI,EAAGA,EAAI2C,KAAK8F,OAAO/E,SAAU1D,EACxC,IAAK2C,KAAK8F,OAAOzI,GAAGqJ,UAAUC,EAAMb,OAAOzI,IACzC,OAAO,EAGX,OAAO,EAGTuJ,UAAUC,GAER,MAAMC,EAAU3I,OAAOY,OAAO,MAC9B,IAAK,MAAMf,KAAQ6I,EACjBC,EAAQ9I,IAAQ,EAElB,MAAM+I,EAAiB/G,KAAK8F,OAAOkB,OAAQX,GAAUS,EAAQT,EAAMrI,OACnE,OAAO,IAAI6H,EAAOkB,EAAgB/G,KAAK+F,UAGzCkB,YAAYC,GAEV,MAAMH,EAAiBG,EAAcC,IAAK3F,GAAUxB,KAAK8F,OAAOtE,IAAQwF,OAAOI,SAC/E,OAAO,IAAIvB,EAAOkB,EAAgB/G,KAAK+F,UAGzCjG,OAAOuH,GACL,IAAIvB,EACAC,EAA2B/F,KAAK+F,SAEpC,GAAIsB,aAA0BxB,EAAQ,CACpC,MAAMyB,EAAcD,EACpBvB,EAASwB,EAAYxB,OACrBC,EAAWwB,EAAUA,EAAU,IAAId,IAAOzG,KAAK+F,UAAWuB,EAAYvB,eAEtED,EAASuB,EAIX,MAAMG,EAAmCrJ,OAAOY,OAAO,MAEvD,IAAK,MAAMsH,KAASrG,KAAK8F,OACvB0B,EAASnB,EAAMrI,MAAQqI,EAGzB,IAAK,MAAMA,KAASP,EAClB0B,EAASnB,EAAMrI,MAAQqI,EAGzB,MAAMoB,EAAetJ,OAAOuJ,OAAOF,GAEnC,OAAO,IAAI3B,EAAO4B,EAAc1B,IAgBpC,SAASwB,EAAaI,EAAOC,GAE3B,OAAO,IAAInB,IAAI,IAAKkB,GAAM,IAAIlB,OAAYmB,GAAM,IAAInB,MEpE/C,IAAKoB,E,kJAAAA,O,eAAAA,I,eAAAA,I,aAAAA,I,iBAAAA,I,mBAAAA,I,eAAAA,I,eAAAA,I,qBAAAA,I,eAAAA,I,eAAAA,I,0BAAAA,I,wBAAAA,I,gBAAAA,I,oBAAAA,I,kBAAAA,I,sCAAAA,I,kCAAAA,I,cAAAA,I,4BAAAA,I,gBAAAA,I,kBAAAA,I,kBAAAA,I,kBAAAA,I,kBAAAA,I,oBAAAA,I,oBAAAA,I,oBAAAA,I,uBAAAA,I,uBAAAA,I,uBAAAA,I,uBAAAA,I,uCAAAA,I,uCAAAA,I,iDAAAA,I,iDAAAA,I,+CAAAA,I,6BAAAA,I,uCAAAA,I,uCAAAA,I,qCAAAA,I,6BAAAA,I,+BAAAA,I,uCAAAA,I,4CAAAA,M,KCHL,MAAMC,EACE,cAAC9G,GACZ,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKG,KAEpB,aAAChH,GACX,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKI,IAElB,eAACjH,GACb,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKK,MAEjB,gBAAClH,GACd,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKM,OAEnB,cAACnH,GACZ,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKO,KAEnB,cAACpH,GACZ,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKQ,KAEhB,iBAACrH,GACf,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKS,QAEnB,cAACtH,GACZ,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKU,KAEnB,cAACvH,GACZ,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKW,KAEd,mBAACxH,GACjB,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKY,UAEf,kBAACzH,GAChB,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKa,SAEnB,cAAC1H,GACZ,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKc,KAEjB,gBAAC3H,GACd,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKe,OAElB,eAAC5H,GACb,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKgB,MAER,yBAAC7H,GACvB,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKiB,gBAEV,uBAAC9H,GACrB,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKkB,cAEpB,aAAC/H,GACX,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKpB,IAEb,oBAACzF,GAClB,OAAOA,GAAKA,EAAE+G,SAAWF,EAAKmB,WAGtB,aACR,OAAOnB,EAAKoB,KAQdvC,UAAUC,GAER,OAAO3G,OAAS2G,GAUbnI,OAAOC,YAiBPD,OAAOC,Y,EAmCPD,OAAOC,YAzBP,MAAMwJ,UAAYH,EAGvBvG,YAAY2H,EAAUC,GACpBC,QAD8B,oDAE9BpJ,KAAKkJ,SAAWA,EAChBlJ,KAAKmJ,SAAWA,EAER,aACR,OAAOtB,EAAKI,IAgBd,SACE,MAAO,MAEToB,WACE,MAAQ,GAAErJ,KAAKkJ,SAAW,IAAM,SAASlJ,KAAKmJ,YAI3C,MAAMG,UAAarB,EACxB1G,cACE6H,OAAM,EAAM,IAGT,MAAMG,UAActB,EACzB1G,cACE6H,OAAM,EAAM,KAGT,MAAMI,UAAcvB,EACzB1G,cACE6H,OAAM,EAAM,KAQT,MAAMK,UAAcxB,EACzB1G,cACE6H,OAAM,EAAO,IAGV,MAAMM,UAAezB,EAC1B1G,cACE6H,OAAM,EAAO,KAGV,MAAMO,UAAe1B,EAC1B1G,cACE6H,OAAM,EAAO,KAWjB,MAAMQ,EAEI,GAFJA,EAGI,G,EAwBHpL,OAAOC,YArBP,MAAMyJ,UAAcJ,EAEzBvG,YAAYsI,GACVT,QADqB,2BAErBpJ,KAAK6J,UAAYA,EAET,aACR,OAAOhC,EAAKK,MAcd,SACE,MAAO,QAETmB,WACE,MAAQ,QAAOrJ,KAAK6J,WASjB,MAAMC,UAAgB5B,EAC3B3G,cACE6H,MAAMQ,IAGH,MAAMG,UAAgB7B,EAC3B3G,cACE6H,MAAMQ,IAcHpL,OAAOC,YAcPD,OAAOC,Y,EA2BPD,OAAOC,Y,EAyCPD,OAAOC,Y,EAoCPD,OAAOC,Y,EA8CPD,OAAOC,Y,EAwCPD,OAAOC,YArBP,MAAMsK,UAAsBjB,EAIjCvG,YAAYyI,EAAkBC,GAC5Bb,QAD0C,oDAE1CpJ,KAAKgK,SAAWA,EAChBhK,KAAKkK,SAAW,CAACD,GAET,aACR,OAAOpC,EAAKkB,cAED,gBACX,OAAO/I,KAAKkK,SAAS,GAAGzE,KAEZ,iBACZ,OAAOzF,KAAKkK,SAAS,GAKvB,SACE,MAAO,gBAETb,WACE,MAAQ,iBAAgBrJ,KAAKgK,aAAahK,KAAKmK,c,EAkB5C3L,OAAOC,Y,wHCreC,MAAM2L,EAMnB7I,YACEvD,EACAyH,EACA4E,GAAW,EACXtE,EAAgC,IAAIU,KACpC,gGACAzG,KAAKhC,KAAOA,EACZgC,KAAKyF,KAAOA,EACZzF,KAAKqK,SAAWA,EAChBrK,KAAK+F,SAAWA,EAGR,aACR,OAAO/F,KAAKyF,MAAQzF,KAAKyF,KAAKsC,OAGhChG,QACE,OAAO,IAAIqI,EAAMpK,KAAKhC,KAAMgC,KAAKyF,KAAMzF,KAAKqK,SAAUrK,KAAK+F,UAG7DW,UAAUC,GACR,OACE3G,KAAKhC,OAAS2I,EAAM3I,MACpBgC,KAAKyF,OAASkB,EAAMlB,MACpBzF,KAAKqK,WAAa1D,EAAM0D,UACxBrK,KAAK+F,WAAaY,EAAMZ,SAI5BsD,WACE,MAAQ,GAAErJ,KAAKyF,OAAOzF,KAAKqK,SAAW,aAAe,KACnDrK,KAAK+F,SAAY,eAAc/F,KAAK+F,SAAa,MCzBvD,SAASuE,EAA2BC,EAAeC,GACjD,MAAMC,EAAc,IAAIhE,IACxB,IAAK,MAAMzH,KAAOwL,EACJ,UAARxL,GACFyL,EAAYC,IAAI1L,EAAK2L,KAAKC,UAAUJ,EAAUxL,KAIlD,MAAMyG,ECzBD,SAAoCoF,GACzC,OAAQA,EAAMtJ,aACZ,KAAKuJ,UACH,OAAO,IAAIxB,EACb,KAAKyB,WACH,OAAO,IAAItB,EACb,KAAKuB,WACH,OAAO,IAAIzB,EACb,KAAK0B,YACH,OAAO,IAAIvB,EACb,KAAKwB,WACH,OAAO,IAAI1B,EACb,KAAK2B,YACH,OAAO,IAAIxB,EACb,KAAKyB,aACH,OAAO,IAAItB,EACb,KAAKuB,aACH,OAAO,IAAItB,EACb,QACE,MAAM,IAAI7D,MAAM,6BDMPoF,CAA2Bd,EAAU9L,OAC5C6M,IAAkB,SAAUf,IAAiC,IAAnBA,EAAUgB,KAC1D,OACI,IAAIpB,EAAMG,EADPgB,EACsB9F,EAGzB,IAAIsD,EAAcyB,EAAUgB,KAAM,IAAIpB,EAAM,QAAS3E,KAHtB,EAAOgF,GE1B7B,SAASgB,EAAQC,EAAMC,GACpC,MAAM,OAACC,GR0SOF,KACd,MAAMG,EAAQ,IAAIvI,GAEY,IAA1BoI,EAAKI,QAAQ,UAEfJ,EAAOA,EAAKK,QAAQ,QAAS,QAGD,IAA1BL,EAAKI,QAAQ,UAEfJ,EAAOA,EAAKK,QAAQ,QAAS,KAG/B,MAAMC,EAAQN,EAAKO,MAAM,MACzB,IAAIC,EAAO,GACPC,EAAgB,GAChBC,EAAa,EACbC,EAAS,GAGb,MAAMC,EAAkC,kBAAhB,GAAGA,SAG3B,IAAK,IAAIjP,EAAI,EAAGK,EAAIsO,EAAMjL,OAAQ1D,EAAIK,EAAGL,IAKvC,GAJA6O,EAAOF,EAAM3O,GACb6O,EAAOI,EAAWJ,EAAKI,WAAaJ,EAAKK,OACzCH,EAAaF,EAAKnL,OAEC,IAAfqL,IAEJD,EAAgBD,EAAKM,OAAO,GAGN,MAAlBL,GAEJ,GAAsB,MAAlBA,EAAuB,CACzB,MAAMM,EAAOP,EAAKD,MAAM,OAExB,OAAQQ,EAAK,IACX,IAAK,IACHZ,EAAM3J,SAASe,KAAKyJ,WAAWD,EAAK,IAAKC,WAAWD,EAAK,IAAKC,WAAWD,EAAK,KAC1D,IAAhBA,EAAK1L,QACP8K,EAAMzJ,OAAOa,KAAKyJ,WAAWD,EAAK,IAAKC,WAAWD,EAAK,IAAKC,WAAWD,EAAK,KAE9E,MACF,IAAK,KACHZ,EAAM1J,QAAQc,KAAKyJ,WAAWD,EAAK,IAAKC,WAAWD,EAAK,IAAKC,WAAWD,EAAK,KAC7E,MACF,IAAK,KACHZ,EAAMxJ,IAAIY,KAAKyJ,WAAWD,EAAK,IAAKC,WAAWD,EAAK,WAInD,GAAsB,MAAlBN,EAAuB,CAChC,MACMQ,EADWT,EAAKU,OAAO,GAAGL,OACJN,MAAM,OAC5BY,EAAe,GAIrB,IAAK,IAAIC,EAAI,EAAGC,EAAKJ,EAAW5L,OAAQ+L,EAAIC,EAAID,IAAK,CACnD,MAAMpH,EAASiH,EAAWG,GAE1B,GAAIpH,EAAO3E,OAAS,EAAG,CACrB,MAAMiM,EAActH,EAAOuG,MAAM,KACjCY,EAAa5J,KAAK+J,IAMtB,MAAMC,EAAKJ,EAAa,GAExB,IAAK,IAAIC,EAAI,EAAGC,EAAKF,EAAa9L,OAAS,EAAG+L,EAAIC,EAAID,IAAK,CACzD,MAAMI,EAAKL,EAAaC,GAClBK,EAAKN,EAAaC,EAAI,GAE5BjB,EAAMlH,QAAQsI,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIF,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIF,EAAG,GAAIC,EAAG,GAAIC,EAAG,UAEtE,GAAsB,MAAlBhB,EAAuB,CAChC,MAAMiB,EAAYlB,EAAKmB,UAAU,GAAGd,OAAON,MAAM,KACjD,IAAIqB,EACJ,MAAMC,EAAU,GAEhB,IAA2B,IAAvBrB,EAAKJ,QAAQ,KACfwB,EAAeF,MACV,CACLE,EAAe,GACf,IAAK,IAAIE,EAAK,EAAGC,EAAOL,EAAUrM,OAAQyM,EAAKC,EAAMD,IAAM,CACzD,MAAME,EAAQN,EAAUI,GAAIvB,MAAM,KAEjB,KAAbyB,EAAM,IAAWJ,EAAarK,KAAKyK,EAAM,IAC5B,KAAbA,EAAM,IAAWH,EAAQtK,KAAKyK,EAAM,KAG5C7B,EAAMlG,gBAAgB2H,EAAcC,QAC/B,GAAsB,MAAlBpB,EAAuB,CAChC,MACMwB,EADWzB,EAAKU,OAAO,GAAGL,OACLN,MAAM,KAEjCJ,EAAMrG,iBAAiBmI,QAClB,GAAwC,QAAnCtB,EAASlL,EAAUyM,KAAK1B,IAAiB,CAOnD,MAAMlO,GAAQ,IAAMqO,EAAO,GAAGO,OAAO,GAAGL,QAAQK,OAAO,GAEvDf,EAAMpI,YAAYzF,QACb,GAAIqD,EAAgBwM,KAAK3B,GAG9BL,EAAM1M,OAAOqD,cAAc0J,EAAKmB,UAAU,GAAGd,OAAQV,EAAMrI,wBACtD,GAAIpC,EAAYyM,KAAK3B,GAG1BL,EAAMrI,kBAAkBP,KAAKiJ,EAAKmB,UAAU,GAAGd,YAC1C,IAAsB,MAAlBJ,EAgCJ,CAEL,GAAa,OAATD,EAAe,SAEnB,MAAM,IAAIhG,MAAO,qBAAoBgG,MApCL,CAuBhC,GAtBAG,EAASH,EAAKD,MAAM,KAsBhBI,EAAOtL,OAAS,EAAG,CACrB,MAAMrC,EAAQ2N,EAAO,GAAGE,OAAOuB,cAC/BjC,EAAM1M,OAAOuC,OAAmB,MAAVhD,GAA2B,QAAVA,OAGvCmN,EAAM1M,OAAOuC,QAAS,EAExB,MAAMmB,EAAWgJ,EAAM1M,OAAO+D,kBAC1BL,IAAUA,EAASnB,OAASmK,EAAM1M,OAAOuC,SASjDmK,EAAMjI,WAEN,MAAMgI,EAAS,GACTtJ,EAAY,GAElB,IAAK,MAAMnD,KAAU0M,EAAMtI,QAAS,CAClC,MAAM,SAACtB,GAAY9C,EAGnB,GAAiC,IAA7B8C,EAASC,SAASnB,OAAc,SAEpC,MAAMgN,EAAO,CACXC,OAAQ,CACNC,YAAahM,EAASC,SAASnB,OAAS,GAE1CX,WAAY,IAGd,OAAQ6B,EAASwD,MACf,IAAK,SACHsI,EAAKnP,KAAO,EACZ,MACF,IAAK,OACHmP,EAAKnP,KAAO,EACZ,MACF,QACEmP,EAAKnP,KAAO,EAIhBmP,EAAK3N,WAAWS,SAAW,CAACnC,MAAO,IAAI0M,aAAanJ,EAASC,UAAWsJ,KAAM,GAE1EvJ,EAASE,QAAQpB,OAAS,IAC5BgN,EAAK3N,WAAW8N,OAAS,CAACxP,MAAO,IAAI0M,aAAanJ,EAASE,SAAUqJ,KAAM,IAGzEvJ,EAASG,OAAOrB,OAAS,IAC3BgN,EAAK3N,WAAW+N,QAAU,CAACzP,MAAO,IAAI0M,aAAanJ,EAASG,QAASoJ,KAAM,IAGzEvJ,EAASI,IAAItB,OAAS,IACxBgN,EAAK3N,WAAWgO,WAAa,CAAC1P,MAAO,IAAI0M,aAAanJ,EAASI,KAAMmJ,KAAM,IAI7EuC,EAAKzL,UAAY,GACjB,IAAK,MAAM+L,KAAkBlP,EAAOmD,UAAW,CAE7C,MAAMgM,EAAY,CAChBtQ,KAAMqQ,EAAerQ,KACrBuQ,aAAcF,EAAe3M,QAE/BqM,EAAKzL,UAAUW,KAAKqL,GACpBhM,EAAUW,KAAKqL,GAGjBP,EAAK/P,KAAOmB,EAAOnB,KACnB4N,EAAO3I,KAAK8K,GAGd,MAAO,CAACnC,SAAQtJ,cQrgBCkM,CAAS9C,GAGpBuC,EAAcrC,EAAO6C,OAAO,CAACjP,EAAGuO,IAASvO,EAAIuO,EAAKC,OAAOC,YAAa,GAEtE7N,EA6BR,SAAyBwL,EAAQqC,GAC/B,MAAMrN,EAAY,IAAIwK,aAA2B,EAAd6C,GACnC,IAAI9L,EACAC,EACAC,EACAhF,EAAI,EAER,IAAK,MAAM0Q,KAAQnC,EAAQ,CACzB,MAAM,SAAC/K,EAAD,OAAWqN,EAAX,QAAmBC,EAAnB,WAA4BC,GAAcL,EAAK3N,WAErDQ,EAAU8J,IAAI7J,EAASnC,MAAW,EAAJrB,GAE1B6Q,IACF/L,EAAUA,GAAW,IAAIiJ,aAA2B,EAAd6C,GACtC9L,EAAQuI,IAAIwD,EAAOxP,MAAW,EAAJrB,IAExB8Q,IACF/L,EAASA,GAAU,IAAIgJ,aAA2B,EAAd6C,GACpC7L,EAAOsI,IAAIyD,EAAQzP,MAAW,EAAJrB,IAExB+Q,IACF/L,EAAMA,GAAO,IAAI+I,aAA2B,EAAd6C,GAC9B5L,EAAIqI,IAAI0D,EAAW1P,MAAW,EAAJrB,IAG5BA,GAAKwD,EAASnC,MAAMqC,OAAS,EAG/B,MAAMX,EAA6B,GACnCA,EAAWS,SAAW,CAACnC,MAAOkC,EAAW4K,KAAM,GAE3CrJ,IACF/B,EAAW8N,OAAS,CAACxP,MAAOyD,EAASqJ,KAAM,IAEzCpJ,IACFhC,EAAW+N,QAAU,CAACzP,MAAO0D,EAAQoJ,KAAM,IAEzCnJ,IACFjC,EAAWgO,WAAa,CAAC1P,MAAO2D,EAAKmJ,KAAM,IAG7C,OAAOpL,EAtEYsO,CAAgB9C,EAAQqC,GAErCD,EAAS,CACbC,cAEAU,YAAaxO,EAAmBC,IAQlC,MAAO,CAELwO,WAAY,CACVZ,OAAQ,IAIVa,OF7BG,SAAsBzO,EAAY2F,EAAW,IAClD,IAAI0E,EACJ,IAAK,MAAMzL,KAAO+G,EAChB0E,EAAcA,GAAe,IAAIhE,IACrB,UAARzH,GACFyL,EAAYC,IAAI1L,EAAK2L,KAAKC,UAAU7E,EAAS/G,KAIjD,MAAM8G,EAAkB,GACxB,IAAK,MAAMyE,KAAiBnK,EAAY,CACtC,MACMiG,EAAQiE,EAA2BC,EADvBnK,EAAWmK,IAE7BzE,EAAO7C,KAAKoD,GAEd,OAAO,IAAIR,EAAOC,EAAQ2E,GEEXqE,CAAa1O,EAAY,CACtCxB,KAAM,EACN+P,YAAaX,EAAOW,cAWpBX,SACApP,KAAM,EAENwB,cC/BJ,MAKa2O,EAAY,CACvB/Q,KAAM,MACNgR,GAAI,MACJ/R,OAAQ,MACRgS,QATc,QAUdC,QAAQ,EACRC,WAAY,CAAC,OACbC,UAAW,CAAC,cACZC,SAMF,SAAqB3D,GAEnB,MAAmB,MAAZA,EAAK,IAPZC,QAAS,CACP2D,IAAK,KASF,MCjBMP,EAAY,IACpBQ,EACHC,MAAOC,MAAOC,EAAa/D,IAAYF,GAAQ,IAAIkE,aAAcC,OAAOF,IACxEG,cAAepE,GAGJqE,EAAwCf","file":"dist.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// @ts-nocheck\r\nconst moduleExports = require('./index');\r\nconst _global = typeof window === 'undefined' ? global : window;\r\n_global.loaders = _global.loaders || {};\r\nmodule.exports = Object.assign(_global.loaders, moduleExports);\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Mesh category utilities\r\n// TODO - move to mesh category module, or to math.gl/geometry module\r\nimport {TypedArray} from '../../types';\r\nimport {MeshAttributes} from './mesh-types';\r\n\r\ntype TypedArrays = {[key: string]: TypedArray};\r\n\r\n/**\r\n * Holds an axis aligned bounding box\r\n * TODO - make sure AxisAlignedBoundingBox in math.gl/culling understands this format (or change this format)\r\n */\r\ntype BoundingBox = [[number, number, number], [number, number, number]];\r\n\r\n/**\r\n * Get number of vertices in mesh\r\n * @param attributes\r\n */\r\nexport function getMeshSize(attributes: TypedArrays): number {\r\n  let size = 0;\r\n  for (const attributeName in attributes) {\r\n    const attribute = attributes[attributeName];\r\n    if (ArrayBuffer.isView(attribute)) {\r\n      // @ts-ignore DataView doesn't have BYTES_PER_ELEMENT\r\n      size += attribute.byteLength * attribute.BYTES_PER_ELEMENT;\r\n    }\r\n  }\r\n  return size;\r\n}\r\n\r\n/**\r\n * Get the (axis aligned) bounding box of a mesh\r\n * @param attributes\r\n * @returns array of two vectors representing the axis aligned bounding box\r\n */\r\n// eslint-disable-next-line complexity\r\nexport function getMeshBoundingBox(attributes: MeshAttributes): BoundingBox {\r\n  let minX = Infinity;\r\n  let minY = Infinity;\r\n  let minZ = Infinity;\r\n  let maxX = -Infinity;\r\n  let maxY = -Infinity;\r\n  let maxZ = -Infinity;\r\n\r\n  const positions = attributes.POSITION ? attributes.POSITION.value : [];\r\n  const len = positions && positions.length;\r\n\r\n  for (let i = 0; i < len; i += 3) {\r\n    const x = positions[i];\r\n    const y = positions[i + 1];\r\n    const z = positions[i + 2];\r\n\r\n    minX = x < minX ? x : minX;\r\n    minY = y < minY ? y : minY;\r\n    minZ = z < minZ ? z : minZ;\r\n\r\n    maxX = x > maxX ? x : maxX;\r\n    maxY = y > maxY ? y : maxY;\r\n    maxZ = z > maxZ ? z : maxZ;\r\n  }\r\n  return [\r\n    [minX, minY, minZ],\r\n    [maxX, maxY, maxZ]\r\n  ];\r\n}\r\n","// OBJ Loader, adapted from THREE.js (MIT license)\r\n//\r\n// Attributions per original THREE.js source file:\r\n//\r\n// @author mrdoob / http://mrdoob.com/\r\n\r\n// @ts-nocheck\r\n\r\n// o object_name | g group_name\r\nconst OBJECT_RE = /^[og]\\s*(.+)?/;\r\n// mtllib file_reference\r\nconst MATERIAL_RE = /^mtllib /;\r\n// usemtl material_name\r\nconst MATERIAL_USE_RE = /^usemtl /;\r\n\r\nclass MeshMaterial {\r\n  constructor({index, name = '', mtllib, smooth, groupStart}) {\r\n    this.index = index;\r\n    this.name = name;\r\n    this.mtllib = mtllib;\r\n    this.smooth = smooth;\r\n    this.groupStart = groupStart;\r\n    this.groupEnd = -1;\r\n    this.groupCount = -1;\r\n    this.inherited = false;\r\n  }\r\n\r\n  clone(index = this.index) {\r\n    return new MeshMaterial({\r\n      index,\r\n      name: this.name,\r\n      mtllib: this.mtllib,\r\n      smooth: this.smooth,\r\n      groupStart: 0\r\n    });\r\n  }\r\n}\r\n\r\nclass MeshObject {\r\n  constructor(name = '') {\r\n    this.name = name;\r\n\r\n    this.geometry = {\r\n      vertices: [],\r\n      normals: [],\r\n      colors: [],\r\n      uvs: []\r\n    };\r\n\r\n    this.materials = [];\r\n    this.smooth = true;\r\n\r\n    this.fromDeclaration = null;\r\n  }\r\n\r\n  startMaterial(name, libraries) {\r\n    const previous = this._finalize(false);\r\n\r\n    // New usemtl declaration overwrites an inherited material, except if faces were declared\r\n    // after the material, then it must be preserved for proper MultiMaterial continuation.\r\n    if (previous && (previous.inherited || previous.groupCount <= 0)) {\r\n      this.materials.splice(previous.index, 1);\r\n    }\r\n\r\n    const material = new MeshMaterial({\r\n      index: this.materials.length,\r\n      name,\r\n      mtllib:\r\n        Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\r\n      smooth: previous !== undefined ? previous.smooth : this.smooth,\r\n      groupStart: previous !== undefined ? previous.groupEnd : 0\r\n    });\r\n\r\n    this.materials.push(material);\r\n\r\n    return material;\r\n  }\r\n\r\n  currentMaterial() {\r\n    if (this.materials.length > 0) {\r\n      return this.materials[this.materials.length - 1];\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  _finalize(end) {\r\n    const lastMultiMaterial = this.currentMaterial();\r\n    if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\r\n      lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\r\n      lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\r\n      lastMultiMaterial.inherited = false;\r\n    }\r\n\r\n    // Ignore objects tail materials if no face declarations followed them before a new o/g started.\r\n    if (end && this.materials.length > 1) {\r\n      for (let mi = this.materials.length - 1; mi >= 0; mi--) {\r\n        if (this.materials[mi].groupCount <= 0) {\r\n          this.materials.splice(mi, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Guarantee at least one empty material, this makes the creation later more straight forward.\r\n    if (end && this.materials.length === 0) {\r\n      this.materials.push({\r\n        name: '',\r\n        smooth: this.smooth\r\n      });\r\n    }\r\n\r\n    return lastMultiMaterial;\r\n  }\r\n}\r\n\r\nclass ParserState {\r\n  constructor() {\r\n    this.objects = [];\r\n    this.object = null;\r\n\r\n    this.vertices = [];\r\n    this.normals = [];\r\n    this.colors = [];\r\n    this.uvs = [];\r\n\r\n    this.materialLibraries = [];\r\n\r\n    this.startObject('', false);\r\n  }\r\n\r\n  startObject(name, fromDeclaration = true) {\r\n    // If the current object (initial from reset) is not from a g/o declaration in the parsed\r\n    // file. We need to use it for the first parsed g/o to keep things in sync.\r\n    if (this.object && !this.object.fromDeclaration) {\r\n      this.object.name = name;\r\n      this.object.fromDeclaration = fromDeclaration;\r\n      return;\r\n    }\r\n\r\n    const previousMaterial =\r\n      this.object && typeof this.object.currentMaterial === 'function'\r\n        ? this.object.currentMaterial()\r\n        : undefined;\r\n\r\n    if (this.object && typeof this.object._finalize === 'function') {\r\n      this.object._finalize(true);\r\n    }\r\n\r\n    this.object = new MeshObject(name);\r\n    this.object.fromDeclaration = fromDeclaration;\r\n\r\n    // Inherit previous objects material.\r\n    // Spec tells us that a declared material must be set to all objects until a new material is declared.\r\n    // If a usemtl declaration is encountered while this new object is being parsed, it will\r\n    // overwrite the inherited material. Exception being that there was already face declarations\r\n    // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\r\n    if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\r\n      const declared = previousMaterial.clone(0);\r\n      declared.inherited = true;\r\n      this.object.materials.push(declared);\r\n    }\r\n\r\n    this.objects.push(this.object);\r\n  }\r\n\r\n  finalize() {\r\n    if (this.object && typeof this.object._finalize === 'function') {\r\n      this.object._finalize(true);\r\n    }\r\n  }\r\n\r\n  parseVertexIndex(value, len) {\r\n    const index = parseInt(value);\r\n    return (index >= 0 ? index - 1 : index + len / 3) * 3;\r\n  }\r\n\r\n  parseNormalIndex(value, len) {\r\n    const index = parseInt(value);\r\n    return (index >= 0 ? index - 1 : index + len / 3) * 3;\r\n  }\r\n\r\n  parseUVIndex(value, len) {\r\n    const index = parseInt(value);\r\n    return (index >= 0 ? index - 1 : index + len / 2) * 2;\r\n  }\r\n\r\n  addVertex(a, b, c) {\r\n    const src = this.vertices;\r\n    const dst = this.object.geometry.vertices;\r\n\r\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\r\n    dst.push(src[b + 0], src[b + 1], src[b + 2]);\r\n    dst.push(src[c + 0], src[c + 1], src[c + 2]);\r\n  }\r\n\r\n  addVertexPoint(a) {\r\n    const src = this.vertices;\r\n    const dst = this.object.geometry.vertices;\r\n\r\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\r\n  }\r\n\r\n  addVertexLine(a) {\r\n    const src = this.vertices;\r\n    const dst = this.object.geometry.vertices;\r\n\r\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\r\n  }\r\n\r\n  addNormal(a, b, c) {\r\n    const src = this.normals;\r\n    const dst = this.object.geometry.normals;\r\n\r\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\r\n    dst.push(src[b + 0], src[b + 1], src[b + 2]);\r\n    dst.push(src[c + 0], src[c + 1], src[c + 2]);\r\n  }\r\n\r\n  addColor(a, b, c) {\r\n    const src = this.colors;\r\n    const dst = this.object.geometry.colors;\r\n\r\n    dst.push(src[a + 0], src[a + 1], src[a + 2]);\r\n    dst.push(src[b + 0], src[b + 1], src[b + 2]);\r\n    dst.push(src[c + 0], src[c + 1], src[c + 2]);\r\n  }\r\n\r\n  addUV(a, b, c) {\r\n    const src = this.uvs;\r\n    const dst = this.object.geometry.uvs;\r\n\r\n    dst.push(src[a + 0], src[a + 1]);\r\n    dst.push(src[b + 0], src[b + 1]);\r\n    dst.push(src[c + 0], src[c + 1]);\r\n  }\r\n\r\n  addUVLine(a) {\r\n    const src = this.uvs;\r\n    const dst = this.object.geometry.uvs;\r\n\r\n    dst.push(src[a + 0], src[a + 1]);\r\n  }\r\n\r\n  // eslint-disable-next-line max-params\r\n  addFace(a, b, c, ua, ub, uc, na, nb, nc) {\r\n    const vLen = this.vertices.length;\r\n\r\n    let ia = this.parseVertexIndex(a, vLen);\r\n    let ib = this.parseVertexIndex(b, vLen);\r\n    let ic = this.parseVertexIndex(c, vLen);\r\n\r\n    this.addVertex(ia, ib, ic);\r\n\r\n    if (ua !== undefined && ua !== '') {\r\n      const uvLen = this.uvs.length;\r\n      ia = this.parseUVIndex(ua, uvLen);\r\n      ib = this.parseUVIndex(ub, uvLen);\r\n      ic = this.parseUVIndex(uc, uvLen);\r\n      this.addUV(ia, ib, ic);\r\n    }\r\n\r\n    if (na !== undefined && na !== '') {\r\n      // Normals are many times the same. If so, skip function call and parseInt.\r\n      const nLen = this.normals.length;\r\n      ia = this.parseNormalIndex(na, nLen);\r\n\r\n      ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\r\n      ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\r\n\r\n      this.addNormal(ia, ib, ic);\r\n    }\r\n\r\n    if (this.colors.length > 0) {\r\n      this.addColor(ia, ib, ic);\r\n    }\r\n  }\r\n\r\n  addPointGeometry(vertices) {\r\n    this.object.geometry.type = 'Points';\r\n\r\n    const vLen = this.vertices.length;\r\n\r\n    for (const vertex of vertices) {\r\n      this.addVertexPoint(this.parseVertexIndex(vertex, vLen));\r\n    }\r\n  }\r\n\r\n  addLineGeometry(vertices, uvs) {\r\n    this.object.geometry.type = 'Line';\r\n\r\n    const vLen = this.vertices.length;\r\n    const uvLen = this.uvs.length;\r\n\r\n    for (const vertex of vertices) {\r\n      this.addVertexLine(this.parseVertexIndex(vertex, vLen));\r\n    }\r\n\r\n    for (const uv of uvs) {\r\n      this.addUVLine(this.parseUVIndex(uv, uvLen));\r\n    }\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line max-statements, complexity\r\nexport default (text) => {\r\n  const state = new ParserState();\r\n\r\n  if (text.indexOf('\\r\\n') !== -1) {\r\n    // This is faster than String.split with regex that splits on both\r\n    text = text.replace(/\\r\\n/g, '\\n');\r\n  }\r\n\r\n  if (text.indexOf('\\\\\\n') !== -1) {\r\n    // join lines separated by a line continuation character (\\)\r\n    text = text.replace(/\\\\\\n/g, '');\r\n  }\r\n\r\n  const lines = text.split('\\n');\r\n  let line = '';\r\n  let lineFirstChar = '';\r\n  let lineLength = 0;\r\n  let result = [];\r\n\r\n  // Faster to just trim left side of the line. Use if available.\r\n  const trimLeft = typeof ''.trimLeft === 'function';\r\n\r\n  /* eslint-disable no-continue, max-depth */\r\n  for (let i = 0, l = lines.length; i < l; i++) {\r\n    line = lines[i];\r\n    line = trimLeft ? line.trimLeft() : line.trim();\r\n    lineLength = line.length;\r\n\r\n    if (lineLength === 0) continue;\r\n\r\n    lineFirstChar = line.charAt(0);\r\n\r\n    // @todo invoke passed in handler if any\r\n    if (lineFirstChar === '#') continue;\r\n\r\n    if (lineFirstChar === 'v') {\r\n      const data = line.split(/\\s+/);\r\n\r\n      switch (data[0]) {\r\n        case 'v':\r\n          state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\r\n          if (data.length === 8) {\r\n            state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\r\n          }\r\n          break;\r\n        case 'vn':\r\n          state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\r\n          break;\r\n        case 'vt':\r\n          state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\r\n          break;\r\n        default:\r\n      }\r\n    } else if (lineFirstChar === 'f') {\r\n      const lineData = line.substr(1).trim();\r\n      const vertexData = lineData.split(/\\s+/);\r\n      const faceVertices = [];\r\n\r\n      // Parse the face vertex data into an easy to work with format\r\n\r\n      for (let j = 0, jl = vertexData.length; j < jl; j++) {\r\n        const vertex = vertexData[j];\r\n\r\n        if (vertex.length > 0) {\r\n          const vertexParts = vertex.split('/');\r\n          faceVertices.push(vertexParts);\r\n        }\r\n      }\r\n\r\n      // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\r\n\r\n      const v1 = faceVertices[0];\r\n\r\n      for (let j = 1, jl = faceVertices.length - 1; j < jl; j++) {\r\n        const v2 = faceVertices[j];\r\n        const v3 = faceVertices[j + 1];\r\n\r\n        state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\r\n      }\r\n    } else if (lineFirstChar === 'l') {\r\n      const lineParts = line.substring(1).trim().split(' ');\r\n      let lineVertices;\r\n      const lineUVs = [];\r\n\r\n      if (line.indexOf('/') === -1) {\r\n        lineVertices = lineParts;\r\n      } else {\r\n        lineVertices = [];\r\n        for (let li = 0, llen = lineParts.length; li < llen; li++) {\r\n          const parts = lineParts[li].split('/');\r\n\r\n          if (parts[0] !== '') lineVertices.push(parts[0]);\r\n          if (parts[1] !== '') lineUVs.push(parts[1]);\r\n        }\r\n      }\r\n      state.addLineGeometry(lineVertices, lineUVs);\r\n    } else if (lineFirstChar === 'p') {\r\n      const lineData = line.substr(1).trim();\r\n      const pointData = lineData.split(' ');\r\n\r\n      state.addPointGeometry(pointData);\r\n    } else if ((result = OBJECT_RE.exec(line)) !== null) {\r\n      // o object_name\r\n      // or\r\n      // g group_name\r\n\r\n      // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\r\n      // var name = result[ 0 ].substr( 1 ).trim();\r\n      const name = (' ' + result[0].substr(1).trim()).substr(1); // eslint-disable-line\r\n\r\n      state.startObject(name);\r\n    } else if (MATERIAL_USE_RE.test(line)) {\r\n      // material\r\n\r\n      state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\r\n    } else if (MATERIAL_RE.test(line)) {\r\n      // mtl file\r\n\r\n      state.materialLibraries.push(line.substring(7).trim());\r\n    } else if (lineFirstChar === 's') {\r\n      result = line.split(' ');\r\n\r\n      // smooth shading\r\n\r\n      // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\r\n      // but does not define a usemtl for each face set.\r\n      // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\r\n      // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\r\n      // where explicit usemtl defines geometry groups.\r\n      // Example asset: examples/models/obj/cerberus/Cerberus.obj\r\n\r\n      /*\r\n       * http://paulbourke.net/dataformats/obj/\r\n       * or\r\n       * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\r\n       *\r\n       * From chapter \"Grouping\" Syntax explanation \"s group_number\":\r\n       * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\r\n       * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\r\n       * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\r\n       * than 0.\"\r\n       */\r\n      if (result.length > 1) {\r\n        const value = result[1].trim().toLowerCase();\r\n        state.object.smooth = value !== '0' && value !== 'off';\r\n      } else {\r\n        // ZBrush can produce \"s\" lines #11707\r\n        state.object.smooth = true;\r\n      }\r\n      const material = state.object.currentMaterial();\r\n      if (material) material.smooth = state.object.smooth;\r\n    } else {\r\n      // Handle null terminated files without exception\r\n      if (line === '\\0') continue;\r\n\r\n      throw new Error(`Unexpected line: \"${line}\"`);\r\n    }\r\n  }\r\n\r\n  state.finalize();\r\n\r\n  const meshes = [];\r\n  const materials = [];\r\n\r\n  for (const object of state.objects) {\r\n    const {geometry} = object;\r\n\r\n    // Skip o/g line declarations that did not follow with any faces\r\n    if (geometry.vertices.length === 0) continue;\r\n\r\n    const mesh = {\r\n      header: {\r\n        vertexCount: geometry.vertices.length / 3\r\n      },\r\n      attributes: {}\r\n    };\r\n\r\n    switch (geometry.type) {\r\n      case 'Points':\r\n        mesh.mode = 0; // GL.POINTS\r\n        break;\r\n      case 'Line':\r\n        mesh.mode = 1; // GL.LINES\r\n        break;\r\n      default:\r\n        mesh.mode = 4; // GL.TRIANGLES\r\n        break;\r\n    }\r\n\r\n    mesh.attributes.POSITION = {value: new Float32Array(geometry.vertices), size: 3};\r\n\r\n    if (geometry.normals.length > 0) {\r\n      mesh.attributes.NORMAL = {value: new Float32Array(geometry.normals), size: 3};\r\n    }\r\n\r\n    if (geometry.colors.length > 0) {\r\n      mesh.attributes.COLOR_0 = {value: new Float32Array(geometry.colors), size: 3};\r\n    }\r\n\r\n    if (geometry.uvs.length > 0) {\r\n      mesh.attributes.TEXCOORD_0 = {value: new Float32Array(geometry.uvs), size: 2};\r\n    }\r\n\r\n    // Create materials\r\n    mesh.materials = [];\r\n    for (const sourceMaterial of object.materials) {\r\n      // TODO - support full spec\r\n      const _material = {\r\n        name: sourceMaterial.name,\r\n        flatShading: !sourceMaterial.smooth\r\n      };\r\n      mesh.materials.push(_material);\r\n      materials.push(_material);\r\n    }\r\n\r\n    mesh.name = object.name;\r\n    meshes.push(mesh);\r\n  }\r\n\r\n  return {meshes, materials};\r\n};\r\n","import {assert} from '../../utils/assert';\r\nimport Field from './field';\r\n\r\nexport type SchemaMetadata = Map<string, any>;\r\n\r\n/**\r\n * ArrowJS `Schema` API-compatible class for row-based tables (returned from `DataTable`)\r\n * https://loaders.gl/arrowjs/docs/api-reference/schema\r\n */\r\nexport default class Schema {\r\n  fields: Field[];\r\n  // TODO - Arrow just allows Map<string, string>\r\n  metadata: SchemaMetadata;\r\n\r\n  constructor(fields: Field[], metadata?: SchemaMetadata) {\r\n    assert(Array.isArray(fields));\r\n    checkNames(fields);\r\n    // For kepler fields, create arrow compatible `Fields` that have kepler fields as `metadata`\r\n    this.fields = fields;\r\n    this.metadata = metadata || new Map();\r\n  }\r\n\r\n  // TODO - arrow only seems to compare fields, not metadata\r\n  compareTo(other: Schema): boolean {\r\n    if (this.metadata !== other.metadata) {\r\n      return false;\r\n    }\r\n    if (this.fields.length !== other.fields.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < this.fields.length; ++i) {\r\n      if (!this.fields[i].compareTo(other.fields[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  select(...columnNames: string[]): Schema {\r\n    // Ensure column names reference valid fields\r\n    const nameMap = Object.create(null);\r\n    for (const name of columnNames) {\r\n      nameMap[name] = true;\r\n    }\r\n    const selectedFields = this.fields.filter((field) => nameMap[field.name]);\r\n    return new Schema(selectedFields, this.metadata);\r\n  }\r\n\r\n  selectAt(...columnIndices: number[]): Schema {\r\n    // Ensure column indices reference valid fields\r\n    const selectedFields = columnIndices.map((index) => this.fields[index]).filter(Boolean);\r\n    return new Schema(selectedFields, this.metadata);\r\n  }\r\n\r\n  assign(schemaOrFields: Schema | Field[]): Schema {\r\n    let fields: Field[];\r\n    let metadata: SchemaMetadata = this.metadata;\r\n\r\n    if (schemaOrFields instanceof Schema) {\r\n      const otherSchema = schemaOrFields;\r\n      fields = otherSchema.fields;\r\n      metadata = mergeMaps(mergeMaps(new Map(), this.metadata), otherSchema.metadata);\r\n    } else {\r\n      fields = schemaOrFields;\r\n    }\r\n\r\n    // Create a merged list of fields, overwrite fields in place, new fields at end\r\n    const fieldMap: {[key: string]: Field} = Object.create(null);\r\n\r\n    for (const field of this.fields) {\r\n      fieldMap[field.name] = field;\r\n    }\r\n\r\n    for (const field of fields) {\r\n      fieldMap[field.name] = field;\r\n    }\r\n\r\n    const mergedFields = Object.values(fieldMap);\r\n\r\n    return new Schema(mergedFields, metadata);\r\n  }\r\n}\r\n\r\n// Warn if any duplicated field names\r\nfunction checkNames(fields) {\r\n  const usedNames = {};\r\n  for (const field of fields) {\r\n    if (usedNames[field.name]) {\r\n      // eslint-disable-next-line\r\n      console.warn('Schema: duplicated field name', field.name, field);\r\n    }\r\n    usedNames[field.name] = true;\r\n  }\r\n}\r\n\r\nfunction mergeMaps<T>(m1: T, m2: T): T {\r\n  // @ts-ignore\r\n  return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\r\n}\r\n","// Replacement for the external assert method to reduce bundle size\r\n// Note: We don't use the second \"message\" argument in calling code,\r\n// so no need to support it here\r\nexport function assert(condition: boolean, message?: string) {\r\n  if (!condition) {\r\n    throw new Error(message || 'loader assertion failed.');\r\n  }\r\n}\r\n","// This code is adapted from ArrowJS https://github.com/apache/arrow\r\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n/**\r\n * Main data type enumeration.\r\n *\r\n * Data types in this library are all *logical*. They can be expressed as\r\n * either a primitive physical type (bytes or bits of some fixed size), a\r\n * nested type consisting of other data types, or another data type (e.g. a\r\n * timestamp encoded as an int64).\r\n *\r\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\r\n * IPC payload.\r\n *\r\n * The rest of the values are specified here so TypeScript can narrow the type\r\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\r\n * metadata like `bitWidth` that impact the type signatures of the values we\r\n * accept and return.\r\n *\r\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\r\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\r\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\r\n * underlying `Int32Array`.\r\n *\r\n * Library consumers benefit by knowing the narrowest type, since we can ensure\r\n * the types across all public methods are propagated, and never bail to `any`.\r\n * These values are _never_ used at runtime, and they will _never_ be written\r\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\r\n */\r\nexport enum Type {\r\n  /** The default placeholder type */\r\n  NONE = 0,\r\n  /** A NULL type having no physical storage */\r\n  Null = 1,\r\n  /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\r\n  Int = 2,\r\n  /** 2, 4, or 8-byte floating point value */\r\n  Float = 3,\r\n  /** Variable-length bytes (no guarantee of UTF8-ness) */\r\n  Binary = 4,\r\n  /** UTF8 variable-length string as List<Char> */\r\n  Utf8 = 5,\r\n  /** Boolean as 1 bit, LSB bit-packed ordering */\r\n  Bool = 6,\r\n  /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\r\n  Decimal = 7,\r\n  /** int32_t days or int64_t milliseconds since the UNIX epoch */\r\n  Date = 8,\r\n  /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\r\n  Time = 9,\r\n  /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\r\n  Timestamp = 10,\r\n  /** YEAR_MONTH or DAY_TIME interval in SQL style */\r\n  Interval = 11,\r\n  /** A list of some logical data type */\r\n  List = 12,\r\n  /** Struct of logical types */\r\n  Struct = 13,\r\n  /** Union of logical types */\r\n  Union = 14,\r\n  /** Fixed-size binary. Each value occupies the same number of bytes */\r\n  FixedSizeBinary = 15,\r\n  /** Fixed-size list. Each value occupies the same number of bytes */\r\n  FixedSizeList = 16,\r\n  /** Map of named logical types */\r\n  Map = 17,\r\n\r\n  /** Dictionary aka Category type */\r\n  Dictionary = -1,\r\n  Int8 = -2,\r\n  Int16 = -3,\r\n  Int32 = -4,\r\n  Int64 = -5,\r\n  Uint8 = -6,\r\n  Uint16 = -7,\r\n  Uint32 = -8,\r\n  Uint64 = -9,\r\n  Float16 = -10,\r\n  Float32 = -11,\r\n  Float64 = -12,\r\n  DateDay = -13,\r\n  DateMillisecond = -14,\r\n  TimestampSecond = -15,\r\n  TimestampMillisecond = -16,\r\n  TimestampMicrosecond = -17,\r\n  TimestampNanosecond = -18,\r\n  TimeSecond = -19,\r\n  TimeMillisecond = -20,\r\n  TimeMicrosecond = -21,\r\n  TimeNanosecond = -22,\r\n  DenseUnion = -23,\r\n  SparseUnion = -24,\r\n  IntervalDayTime = -25,\r\n  IntervalYearMonth = -26\r\n}\r\n","// This code is adapted from ArrowJS https://github.com/apache/arrow\r\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nimport {Type} from './enum';\r\n\r\nimport Field from './field';\r\n\r\nexport {Type} from './enum';\r\n\r\nexport type TypedIntArray =\r\n  | Int8Array\r\n  | Uint8Array\r\n  | Int16Array\r\n  | Uint16Array\r\n  | Int32Array\r\n  | Uint32Array\r\n  | Int32Array\r\n  | Uint32Array\r\n  | Uint8ClampedArray;\r\n\r\nexport type TypedFloatArray = Float32Array | Float64Array;\r\n\r\nexport type TypedArray = TypedIntArray | TypedFloatArray;\r\n\r\nexport type AnyArrayType = Array<any> | TypedIntArray | TypedFloatArray;\r\n\r\nexport class DataType {\r\n  static isNull(x: any): boolean {\r\n    return x && x.typeId === Type.Null;\r\n  }\r\n  static isInt(x: any): boolean {\r\n    return x && x.typeId === Type.Int;\r\n  }\r\n  static isFloat(x: any): boolean {\r\n    return x && x.typeId === Type.Float;\r\n  }\r\n  static isBinary(x: any): boolean {\r\n    return x && x.typeId === Type.Binary;\r\n  }\r\n  static isUtf8(x: any): boolean {\r\n    return x && x.typeId === Type.Utf8;\r\n  }\r\n  static isBool(x: any): boolean {\r\n    return x && x.typeId === Type.Bool;\r\n  }\r\n  static isDecimal(x: any): boolean {\r\n    return x && x.typeId === Type.Decimal;\r\n  }\r\n  static isDate(x: any): boolean {\r\n    return x && x.typeId === Type.Date;\r\n  }\r\n  static isTime(x: any): boolean {\r\n    return x && x.typeId === Type.Time;\r\n  }\r\n  static isTimestamp(x: any): boolean {\r\n    return x && x.typeId === Type.Timestamp;\r\n  }\r\n  static isInterval(x: any): boolean {\r\n    return x && x.typeId === Type.Interval;\r\n  }\r\n  static isList(x: any): boolean {\r\n    return x && x.typeId === Type.List;\r\n  }\r\n  static isStruct(x: any): boolean {\r\n    return x && x.typeId === Type.Struct;\r\n  }\r\n  static isUnion(x: any): boolean {\r\n    return x && x.typeId === Type.Union;\r\n  }\r\n  static isFixedSizeBinary(x: any): boolean {\r\n    return x && x.typeId === Type.FixedSizeBinary;\r\n  }\r\n  static isFixedSizeList(x: any): boolean {\r\n    return x && x.typeId === Type.FixedSizeList;\r\n  }\r\n  static isMap(x: any): boolean {\r\n    return x && x.typeId === Type.Map;\r\n  }\r\n  static isDictionary(x: any): boolean {\r\n    return x && x.typeId === Type.Dictionary;\r\n  }\r\n\r\n  get typeId(): Type {\r\n    return Type.NONE;\r\n  }\r\n\r\n  // get ArrayType(): AnyArrayType {\r\n  //   return Int8Array;\r\n  // }\r\n\r\n  // get ArrayType() { return Array; }\r\n  compareTo(other: DataType): boolean {\r\n    // TODO\r\n    return this === other; // comparer.visit(this, other);\r\n  }\r\n}\r\n\r\n// NULL\r\n\r\nexport class Null extends DataType {\r\n  get typeId(): Type {\r\n    return Type.Null;\r\n  }\r\n  get [Symbol.toStringTag](): string {\r\n    return 'Null';\r\n  }\r\n  toString(): string {\r\n    return 'Null';\r\n  }\r\n}\r\n\r\n// BOOLEANS\r\n\r\nexport class Bool extends DataType {\r\n  get typeId(): Type {\r\n    return Type.Bool;\r\n  }\r\n  // get ArrayType() {\r\n  //   return Uint8Array;\r\n  // }\r\n  get [Symbol.toStringTag](): string {\r\n    return 'Bool';\r\n  }\r\n  toString(): string {\r\n    return 'Bool';\r\n  }\r\n}\r\n\r\n// INTS\r\n\r\nexport class Int extends DataType {\r\n  readonly isSigned: boolean;\r\n  readonly bitWidth: number;\r\n  constructor(isSigned, bitWidth) {\r\n    super();\r\n    this.isSigned = isSigned;\r\n    this.bitWidth = bitWidth;\r\n  }\r\n  get typeId(): Type {\r\n    return Type.Int;\r\n  }\r\n  // get ArrayType() {\r\n  //   switch (this.bitWidth) {\r\n  //     case 8:\r\n  //       return this.isSigned ? Int8Array : Uint8Array;\r\n  //     case 16:\r\n  //       return this.isSigned ? Int16Array : Uint16Array;\r\n  //     case 32:\r\n  //       return this.isSigned ? Int32Array : Uint32Array;\r\n  //     case 64:\r\n  //       return this.isSigned ? Int32Array : Uint32Array;\r\n  //     default:\r\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\r\n  //   }\r\n  // }\r\n  get [Symbol.toStringTag](): string {\r\n    return 'Int';\r\n  }\r\n  toString(): string {\r\n    return `${this.isSigned ? 'I' : 'Ui'}nt${this.bitWidth}`;\r\n  }\r\n}\r\n\r\nexport class Int8 extends Int {\r\n  constructor() {\r\n    super(true, 8);\r\n  }\r\n}\r\nexport class Int16 extends Int {\r\n  constructor() {\r\n    super(true, 16);\r\n  }\r\n}\r\nexport class Int32 extends Int {\r\n  constructor() {\r\n    super(true, 32);\r\n  }\r\n}\r\nexport class Int64 extends Int {\r\n  constructor() {\r\n    super(true, 64);\r\n  }\r\n}\r\nexport class Uint8 extends Int {\r\n  constructor() {\r\n    super(false, 8);\r\n  }\r\n}\r\nexport class Uint16 extends Int {\r\n  constructor() {\r\n    super(false, 16);\r\n  }\r\n}\r\nexport class Uint32 extends Int {\r\n  constructor() {\r\n    super(false, 32);\r\n  }\r\n}\r\nexport class Uint64 extends Int {\r\n  constructor() {\r\n    super(false, 64);\r\n  }\r\n}\r\n\r\n// FLOATS\r\n\r\nconst Precision = {\r\n  HALF: 16,\r\n  SINGLE: 32,\r\n  DOUBLE: 64\r\n};\r\n\r\nexport class Float extends DataType {\r\n  readonly precision: number;\r\n  constructor(precision) {\r\n    super();\r\n    this.precision = precision;\r\n  }\r\n  get typeId(): Type {\r\n    return Type.Float;\r\n  }\r\n  // get ArrayType() {\r\n  //   switch (this.precision) {\r\n  //     case Precision.HALF:\r\n  //       return Uint16Array;\r\n  //     case Precision.SINGLE:\r\n  //       return Float32Array;\r\n  //     case Precision.DOUBLE:\r\n  //       return Float64Array;\r\n  //     default:\r\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\r\n  //   }\r\n  // }\r\n  get [Symbol.toStringTag](): string {\r\n    return 'Float';\r\n  }\r\n  toString(): string {\r\n    return `Float${this.precision}`;\r\n  }\r\n}\r\n\r\nexport class Float16 extends Float {\r\n  constructor() {\r\n    super(Precision.HALF);\r\n  }\r\n}\r\nexport class Float32 extends Float {\r\n  constructor() {\r\n    super(Precision.SINGLE);\r\n  }\r\n}\r\nexport class Float64 extends Float {\r\n  constructor() {\r\n    super(Precision.DOUBLE);\r\n  }\r\n}\r\n\r\nexport class Binary extends DataType {\r\n  constructor() {\r\n    super();\r\n  }\r\n  get typeId() {\r\n    return Type.Binary;\r\n  }\r\n  toString() {\r\n    return 'Binary';\r\n  }\r\n  get [Symbol.toStringTag]() {\r\n    return 'Binary';\r\n  }\r\n}\r\n\r\n// STRINGS\r\n\r\nexport class Utf8 extends DataType {\r\n  get typeId(): Type {\r\n    return Type.Utf8;\r\n  }\r\n  // get ArrayType() {\r\n  //   return Uint8Array;\r\n  // }\r\n  get [Symbol.toStringTag](): string {\r\n    return 'Utf8';\r\n  }\r\n  toString(): string {\r\n    return 'Utf8';\r\n  }\r\n}\r\n\r\n// DATES, TIMES AND INTERVALS\r\n\r\nconst DateUnit = {\r\n  DAY: 0,\r\n  MILLISECOND: 1\r\n};\r\n\r\nexport class Date extends DataType {\r\n  readonly unit: number;\r\n  constructor(unit) {\r\n    super();\r\n    this.unit = unit;\r\n  }\r\n  get typeId(): Type {\r\n    return Type.Date;\r\n  }\r\n  // get ArrayType() {\r\n  //   return Int32Array;\r\n  // }\r\n  get [Symbol.toStringTag](): string {\r\n    return 'Date';\r\n  }\r\n  toString(): string {\r\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\r\n  }\r\n}\r\n\r\nexport class DateDay extends Date {\r\n  constructor() {\r\n    super(DateUnit.DAY);\r\n  }\r\n}\r\nexport class DateMillisecond extends Date {\r\n  constructor() {\r\n    super(DateUnit.MILLISECOND);\r\n  }\r\n}\r\n\r\nconst TimeUnit = {\r\n  SECOND: 1,\r\n  MILLISECOND: 1e3,\r\n  MICROSECOND: 1e6,\r\n  NANOSECOND: 1e9\r\n};\r\n\r\nexport class Time extends DataType {\r\n  readonly unit: number;\r\n  readonly bitWidth: number;\r\n\r\n  constructor(unit, bitWidth) {\r\n    super();\r\n    this.unit = unit;\r\n    this.bitWidth = bitWidth;\r\n  }\r\n  get typeId(): Type {\r\n    return Type.Time;\r\n  }\r\n  toString(): string {\r\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\r\n  }\r\n  get [Symbol.toStringTag](): string {\r\n    return 'Time';\r\n  }\r\n  // get ArrayType() {\r\n  //   return Int32Array;\r\n  // }\r\n}\r\n\r\nexport class TimeSecond extends Time {\r\n  constructor() {\r\n    super(TimeUnit.SECOND, 32);\r\n  }\r\n}\r\nexport class TimeMillisecond extends Time {\r\n  constructor() {\r\n    super(TimeUnit.MILLISECOND, 32);\r\n  }\r\n}\r\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\r\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\r\n\r\nexport class Timestamp extends DataType {\r\n  readonly unit: any;\r\n  readonly timezone: any;\r\n\r\n  constructor(unit: any, timezone = null) {\r\n    super();\r\n    this.unit = unit;\r\n    this.timezone = timezone;\r\n  }\r\n  get typeId(): Type {\r\n    return Type.Timestamp;\r\n  }\r\n  // get ArrayType() {\r\n  //   return Int32Array;\r\n  // }\r\n  get [Symbol.toStringTag](): string {\r\n    return 'Timestamp';\r\n  }\r\n  toString(): string {\r\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ''}>`;\r\n  }\r\n}\r\n\r\nexport class TimestampSecond extends Timestamp {\r\n  constructor(timezone = null) {\r\n    super(TimeUnit.SECOND, timezone);\r\n  }\r\n}\r\nexport class TimestampMillisecond extends Timestamp {\r\n  constructor(timezone = null) {\r\n    super(TimeUnit.MILLISECOND, timezone);\r\n  }\r\n}\r\nexport class TimestampMicrosecond extends Timestamp {\r\n  constructor(timezone = null) {\r\n    super(TimeUnit.MICROSECOND, timezone);\r\n  }\r\n}\r\nexport class TimestampNanosecond extends Timestamp {\r\n  constructor(timezone = null) {\r\n    super(TimeUnit.NANOSECOND, timezone);\r\n  }\r\n}\r\n\r\nconst IntervalUnit = {\r\n  DAY_TIME: 0,\r\n  YEAR_MONTH: 1\r\n};\r\n\r\nexport class Interval extends DataType {\r\n  readonly unit: number;\r\n  constructor(unit: number) {\r\n    super();\r\n    this.unit = unit;\r\n  }\r\n  get typeId(): Type {\r\n    return Type.Interval;\r\n  }\r\n  // get ArrayType() {\r\n  //   return Int32Array;\r\n  // }\r\n  get [Symbol.toStringTag](): string {\r\n    return 'Interval';\r\n  }\r\n  toString(): string {\r\n    return `Interval<${IntervalUnit[this.unit]}>`;\r\n  }\r\n}\r\n\r\nexport class IntervalDayTime extends Interval {\r\n  constructor() {\r\n    super(IntervalUnit.DAY_TIME);\r\n  }\r\n}\r\nexport class IntervalYearMonth extends Interval {\r\n  constructor() {\r\n    super(IntervalUnit.YEAR_MONTH);\r\n  }\r\n}\r\n\r\nexport class FixedSizeList extends DataType {\r\n  readonly listSize: number;\r\n  readonly children: Field[];\r\n\r\n  constructor(listSize: number, child: Field) {\r\n    super();\r\n    this.listSize = listSize;\r\n    this.children = [child];\r\n  }\r\n  get typeId(): Type {\r\n    return Type.FixedSizeList;\r\n  }\r\n  get valueType() {\r\n    return this.children[0].type;\r\n  }\r\n  get valueField() {\r\n    return this.children[0];\r\n  }\r\n  // get ArrayType() {\r\n  //   return this.valueType.ArrayType;\r\n  // }\r\n  get [Symbol.toStringTag](): string {\r\n    return 'FixedSizeList';\r\n  }\r\n  toString(): string {\r\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\r\n  }\r\n}\r\n\r\nexport class Struct extends DataType {\r\n  public readonly children: Field[];\r\n\r\n  constructor(children: Field[]) {\r\n    super();\r\n    this.children = children;\r\n  }\r\n\r\n  public get typeId() {\r\n    return Type.Struct;\r\n  }\r\n  public toString() {\r\n    return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(', ')}}>`;\r\n  }\r\n  get [Symbol.toStringTag](): string {\r\n    return 'Struct';\r\n  }\r\n}\r\n","import {DataType} from './type';\r\n\r\n/**\r\n * ArrowJS `Field` API-compatible class for row-based tables\r\n * https://loaders.gl/arrowjs/docs/api-reference/field\r\n * A field holds name, nullable, and metadata information about a table \"column\"\r\n * A Schema is essentially a list of fields\r\n */\r\nexport default class Field {\r\n  name: string;\r\n  type: DataType;\r\n  nullable: boolean;\r\n  metadata: Map<string, string>;\r\n\r\n  constructor(\r\n    name: string,\r\n    type: DataType,\r\n    nullable = false,\r\n    metadata: Map<string, string> = new Map()\r\n  ) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.nullable = nullable;\r\n    this.metadata = metadata;\r\n  }\r\n\r\n  get typeId(): number {\r\n    return this.type && this.type.typeId;\r\n  }\r\n\r\n  clone(): Field {\r\n    return new Field(this.name, this.type, this.nullable, this.metadata);\r\n  }\r\n\r\n  compareTo(other: this): boolean {\r\n    return (\r\n      this.name === other.name &&\r\n      this.type === other.type &&\r\n      this.nullable === other.nullable &&\r\n      this.metadata === other.metadata\r\n    );\r\n  }\r\n\r\n  toString(): string {\r\n    return `${this.type}${this.nullable ? ', nullable' : ''}${\r\n      this.metadata ? `, metadata: ${this.metadata}` : ''\r\n    }`;\r\n  }\r\n}\r\n","import {Schema, Field, FixedSizeList, getArrowTypeFromTypedArray} from '@loaders.gl/schema';\r\n\r\nexport function getOBJSchema(attributes, metadata = {}) {\r\n  let metadataMap;\r\n  for (const key in metadata) {\r\n    metadataMap = metadataMap || new Map();\r\n    if (key !== 'value') {\r\n      metadataMap.set(key, JSON.stringify(metadata[key]));\r\n    }\r\n  }\r\n\r\n  const fields: Field[] = [];\r\n  for (const attributeName in attributes) {\r\n    const attribute = attributes[attributeName];\r\n    const field = getArrowFieldFromAttribute(attributeName, attribute);\r\n    fields.push(field);\r\n  }\r\n  return new Schema(fields, metadataMap);\r\n}\r\n\r\nfunction getArrowFieldFromAttribute(attributeName, attribute) {\r\n  const metadataMap = new Map();\r\n  for (const key in attribute) {\r\n    if (key !== 'value') {\r\n      metadataMap.set(key, JSON.stringify(attribute[key]));\r\n    }\r\n  }\r\n\r\n  const type = getArrowTypeFromTypedArray(attribute.value);\r\n  const isSingleValue = !('size' in attribute) || attribute.size === 1;\r\n  return isSingleValue\r\n    ? new Field(attributeName, type, false, metadataMap)\r\n    : new Field(\r\n      attributeName,\r\n      new FixedSizeList(attribute.size, new Field('value', type)),\r\n      false,\r\n      metadataMap\r\n    );\r\n}\r\n","import type {TypedArray} from '../../types';\r\nimport {DataType, Float32, Float64, Int16, Int32, Int8, Uint16, Uint32, Uint8} from '../schema';\r\n\r\nexport function getArrowTypeFromTypedArray(array: TypedArray): DataType {\r\n  switch (array.constructor) {\r\n    case Int8Array:\r\n      return new Int8();\r\n    case Uint8Array:\r\n      return new Uint8();\r\n    case Int16Array:\r\n      return new Int16();\r\n    case Uint16Array:\r\n      return new Uint16();\r\n    case Int32Array:\r\n      return new Int32();\r\n    case Uint32Array:\r\n      return new Uint32();\r\n    case Float32Array:\r\n      return new Float32();\r\n    case Float64Array:\r\n      return new Float64();\r\n    default:\r\n      throw new Error('array type not supported');\r\n  }\r\n}\r\n","import type {MeshAttributes} from '@loaders.gl/schema';\r\nimport {getMeshBoundingBox} from '@loaders.gl/schema';\r\nimport parseOBJ from './parse-obj';\r\nimport {getOBJSchema} from './get-obj-schema';\r\n\r\nexport default function loadOBJ(text, options) {\r\n  const {meshes} = parseOBJ(text);\r\n\r\n  // @ts-expect-error\r\n  const vertexCount = meshes.reduce((s, mesh) => s + mesh.header.vertexCount, 0);\r\n  // TODO - render objects separately\r\n  const attributes = mergeAttributes(meshes, vertexCount);\r\n\r\n  const header = {\r\n    vertexCount,\r\n    // @ts-ignore Need to export Attributes type\r\n    boundingBox: getMeshBoundingBox(attributes)\r\n  };\r\n\r\n  const schema = getOBJSchema(attributes, {\r\n    mode: 4,\r\n    boundingBox: header.boundingBox\r\n  });\r\n\r\n  return {\r\n    // Data return by this loader implementation\r\n    loaderData: {\r\n      header: {}\r\n    },\r\n\r\n    // Normalised data\r\n    schema,\r\n    header,\r\n    mode: 4, // TRIANGLES\r\n\r\n    attributes\r\n  };\r\n}\r\n\r\n// eslint-disable-next-line max-statements\r\nfunction mergeAttributes(meshes, vertexCount) {\r\n  const positions = new Float32Array(vertexCount * 3);\r\n  let normals;\r\n  let colors;\r\n  let uvs;\r\n  let i = 0;\r\n\r\n  for (const mesh of meshes) {\r\n    const {POSITION, NORMAL, COLOR_0, TEXCOORD_0} = mesh.attributes;\r\n\r\n    positions.set(POSITION.value, i * 3);\r\n\r\n    if (NORMAL) {\r\n      normals = normals || new Float32Array(vertexCount * 3);\r\n      normals.set(NORMAL.value, i * 3);\r\n    }\r\n    if (COLOR_0) {\r\n      colors = colors || new Float32Array(vertexCount * 3);\r\n      colors.set(COLOR_0.value, i * 3);\r\n    }\r\n    if (TEXCOORD_0) {\r\n      uvs = uvs || new Float32Array(vertexCount * 2);\r\n      uvs.set(TEXCOORD_0.value, i * 2);\r\n    }\r\n\r\n    i += POSITION.value.length / 3;\r\n  }\r\n\r\n  const attributes: MeshAttributes = {};\r\n  attributes.POSITION = {value: positions, size: 3};\r\n\r\n  if (normals) {\r\n    attributes.NORMAL = {value: normals, size: 3};\r\n  }\r\n  if (colors) {\r\n    attributes.COLOR_0 = {value: colors, size: 3};\r\n  }\r\n  if (uvs) {\r\n    attributes.TEXCOORD_0 = {value: uvs, size: 2};\r\n  }\r\n\r\n  return attributes;\r\n}\r\n","import type {Loader} from '@loaders.gl/loader-utils';\r\n\r\n// __VERSION__ is injected by babel-plugin-version-inline\r\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\r\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\r\n\r\n/**\r\n * Worker loader for the OBJ geometry format\r\n */\r\nexport const OBJLoader = {\r\n  name: 'OBJ',\r\n  id: 'obj',\r\n  module: 'obj',\r\n  version: VERSION,\r\n  worker: true,\r\n  extensions: ['obj'],\r\n  mimeTypes: ['text/plain'],\r\n  testText: testOBJFile,\r\n  options: {\r\n    obj: {}\r\n  }\r\n};\r\n\r\nfunction testOBJFile(text) {\r\n  // TODO - There could be comment line first\r\n  return text[0] === 'v';\r\n}\r\n\r\nexport const _typecheckOBJLoader: Loader = OBJLoader;\r\n","import type {LoaderWithParser} from '@loaders.gl/loader-utils';\r\nimport loadOBJ from './lib/load-obj';\r\nimport {OBJLoader as OBJWorkerLoader} from './obj-loader';\r\n\r\n// OBJLoader\r\n\r\nexport {OBJWorkerLoader};\r\n\r\n/**\r\n * Loader for the OBJ geometry format\r\n */\r\nexport const OBJLoader = {\r\n  ...OBJWorkerLoader,\r\n  parse: async (arrayBuffer, options) => loadOBJ(new TextDecoder().decode(arrayBuffer), options),\r\n  parseTextSync: loadOBJ\r\n};\r\n\r\nexport const _typecheckOBJLoader: LoaderWithParser = OBJLoader;\r\n"],"sourceRoot":""}