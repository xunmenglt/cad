{"version":3,"sources":["../../../src/lib/loader-utils/option-defaults.ts"],"names":["ConsoleLog","DEFAULT_LOADER_OPTIONS","fetch","mimeType","undefined","nothrow","log","CDN","worker","maxConcurrency","maxMobileConcurrency","reuseWorkers","_workerType","limit","_limitMB","batchSize","batchDebounceMs","metadata","transforms","REMOVED_LOADER_OPTIONS","throws","dataType","uri","method","headers","body","mode","credentials","cache","redirect","referrer","referrerPolicy","integrity","keepalive","signal"],"mappings":"AACA,SAAQA,UAAR,QAAyB,WAAzB;AAEA,OAAO,MAAMC,sBAAqC,GAAG;AAEnDC,EAAAA,KAAK,EAAE,IAF4C;AAGnDC,EAAAA,QAAQ,EAAEC,SAHyC;AAInDC,EAAAA,OAAO,EAAE,KAJ0C;AAKnDC,EAAAA,GAAG,EAAE,IAAIN,UAAJ,EAL8C;AAOnDO,EAAAA,GAAG,EAAE,+BAP8C;AAQnDC,EAAAA,MAAM,EAAE,IAR2C;AASnDC,EAAAA,cAAc,EAAE,CATmC;AAUnDC,EAAAA,oBAAoB,EAAE,CAV6B;AAWnDC,EAAAA,YAAY,EAAE,IAXqC;AAYnDC,EAAAA,WAAW,EAAE,EAZsC;AAcnDC,EAAAA,KAAK,EAAE,CAd4C;AAenDC,EAAAA,QAAQ,EAAE,CAfyC;AAgBnDC,EAAAA,SAAS,EAAE,MAhBwC;AAiBnDC,EAAAA,eAAe,EAAE,CAjBkC;AAkBnDC,EAAAA,QAAQ,EAAE,KAlByC;AAmBnDC,EAAAA,UAAU,EAAE;AAnBuC,CAA9C;AAsBP,OAAO,MAAMC,sBAAsB,GAAG;AACpCC,EAAAA,MAAM,EAAE,SAD4B;AAEpCC,EAAAA,QAAQ,EAAE,kBAF0B;AAGpCC,EAAAA,GAAG,EAAE,SAH+B;AAKpCC,EAAAA,MAAM,EAAE,cAL4B;AAMpCC,EAAAA,OAAO,EAAE,eAN2B;AAOpCC,EAAAA,IAAI,EAAE,YAP8B;AAQpCC,EAAAA,IAAI,EAAE,YAR8B;AASpCC,EAAAA,WAAW,EAAE,mBATuB;AAUpCC,EAAAA,KAAK,EAAE,aAV6B;AAWpCC,EAAAA,QAAQ,EAAE,gBAX0B;AAYpCC,EAAAA,QAAQ,EAAE,gBAZ0B;AAapCC,EAAAA,cAAc,EAAE,sBAboB;AAcpCC,EAAAA,SAAS,EAAE,iBAdyB;AAepCC,EAAAA,SAAS,EAAE,iBAfyB;AAgBpCC,EAAAA,MAAM,EAAE;AAhB4B,CAA/B","sourcesContent":["import type {LoaderOptions} from '@loaders.gl/loader-utils';\r\nimport {ConsoleLog} from './loggers';\r\n\r\nexport const DEFAULT_LOADER_OPTIONS: LoaderOptions = {\r\n  // baseUri\r\n  fetch: null,\r\n  mimeType: undefined,\r\n  nothrow: false,\r\n  log: new ConsoleLog(), // A probe.gl compatible (`log.log()()` syntax) that just logs to console\r\n\r\n  CDN: 'https://unpkg.com/@loaders.gl',\r\n  worker: true, // By default, use worker if provided by loader.\r\n  maxConcurrency: 3, // How many worker instances should be created for each loader.\r\n  maxMobileConcurrency: 1, // How many worker instances should be created for each loader on mobile devices.\r\n  reuseWorkers: true, // By default reuse workers,\r\n  _workerType: '', // 'test' to use locally generated workers\r\n\r\n  limit: 0,\r\n  _limitMB: 0,\r\n  batchSize: 'auto',\r\n  batchDebounceMs: 0,\r\n  metadata: false, // TODO - currently only implemented for parseInBatches, adds initial metadata batch,\r\n  transforms: []\r\n};\r\n\r\nexport const REMOVED_LOADER_OPTIONS = {\r\n  throws: 'nothrow',\r\n  dataType: '(no longer used)',\r\n  uri: 'baseUri',\r\n  // Warn if fetch options are used on top-level\r\n  method: 'fetch.method',\r\n  headers: 'fetch.headers',\r\n  body: 'fetch.body',\r\n  mode: 'fetch.mode',\r\n  credentials: 'fetch.credentials',\r\n  cache: 'fetch.cache',\r\n  redirect: 'fetch.redirect',\r\n  referrer: 'fetch.referrer',\r\n  referrerPolicy: 'fetch.referrerPolicy',\r\n  integrity: 'fetch.integrity',\r\n  keepalive: 'fetch.keepalive',\r\n  signal: 'fetch.signal'\r\n};\r\n"],"file":"option-defaults.js"}