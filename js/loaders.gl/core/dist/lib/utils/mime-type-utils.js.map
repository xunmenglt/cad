{"version":3,"sources":["../../../src/lib/utils/mime-type-utils.ts"],"names":["DATA_URL_PATTERN","MIME_TYPE_PATTERN","parseMIMEType","mimeString","matches","exec","parseMIMETypeFromURL","url"],"mappings":"AAGA,MAAMA,gBAAgB,GAAG,gCAAzB;AACA,MAAMC,iBAAiB,GAAG,sBAA1B;AAUA,OAAO,SAASC,aAAT,CAAuBC,UAAvB,EAAmD;AAExD,QAAMC,OAAO,GAAGH,iBAAiB,CAACI,IAAlB,CAAuBF,UAAvB,CAAhB;;AACA,MAAIC,OAAJ,EAAa;AACX,WAAOA,OAAO,CAAC,CAAD,CAAd;AACD;;AACD,SAAOD,UAAP;AACD;AAWD,OAAO,SAASG,oBAAT,CAA8BC,GAA9B,EAAmD;AAExD,QAAMH,OAAO,GAAGJ,gBAAgB,CAACK,IAAjB,CAAsBE,GAAtB,CAAhB;;AACA,MAAIH,OAAJ,EAAa;AACX,WAAOA,OAAO,CAAC,CAAD,CAAd;AACD;;AACD,SAAO,EAAP;AACD","sourcesContent":["// TODO - build/integrate proper MIME type parsing\r\n// https://mimesniff.spec.whatwg.org/\r\n\r\nconst DATA_URL_PATTERN = /^data:([-\\w.]+\\/[-\\w.+]+)(;|,)/;\r\nconst MIME_TYPE_PATTERN = /^([-\\w.]+\\/[-\\w.+]+)/;\r\n\r\n/**\r\n * Remove extra data like `charset` from MIME types\r\n * @param mimeString\r\n * @returns A clean MIME type, or an empty string\r\n *\r\n * @todo - handle more advanced MIMETYpes, multiple types\r\n * @todo - extract charset etc\r\n */\r\nexport function parseMIMEType(mimeString: string): string {\r\n  // If resource is a data url, extract any embedded mime type\r\n  const matches = MIME_TYPE_PATTERN.exec(mimeString);\r\n  if (matches) {\r\n    return matches[1];\r\n  }\r\n  return mimeString;\r\n}\r\n\r\n/**\r\n * Extract MIME type from data URL\r\n *\r\n * @param mimeString\r\n * @returns A clean MIME type, or an empty string\r\n *\r\n * @todo - handle more advanced MIMETYpes, multiple types\r\n * @todo - extract charset etc\r\n */\r\nexport function parseMIMETypeFromURL(url: string): string {\r\n  // If resource is a data URL, extract any embedded mime type\r\n  const matches = DATA_URL_PATTERN.exec(url);\r\n  if (matches) {\r\n    return matches[1];\r\n  }\r\n  return '';\r\n}\r\n"],"file":"mime-type-utils.js"}